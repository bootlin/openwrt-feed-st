From bb17105ced0589e4ffd598bc20c2a5415c654fd7 Mon Sep 17 00:00:00 2001
From: Pankaj Dev <pankaj.dev@st.com>
Date: Fri, 19 Jan 2024 00:00:24 +0530
Subject: [PATCH] phy: stm32: add PM support for STM32 USB2-PHY

Support for System PM suspend/resume and Remote Wakeup from
a usb device, usb2-phy should be turned off since it is
not needed for wakeup capability. In case usb-remote
wakeup is not enabled, usb2-phy is already turned off
by HCD driver using exit callback

Change-Id: I24de32ba6432eb9f3a0491331f049a161ea4a280
Signed-off-by: Pankaj Dev <pankaj.dev@st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/370806
Reviewed-by: Fabrice GASNIER <fabrice.gasnier@foss.st.com>
Domain-Review: Fabrice GASNIER <fabrice.gasnier@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 drivers/phy/st/phy-stm32-usb2phy.c | 53 +++++++++++++++++++++++++++++-
 1 file changed, 52 insertions(+), 1 deletion(-)

diff --git a/drivers/phy/st/phy-stm32-usb2phy.c b/drivers/phy/st/phy-stm32-usb2phy.c
index d77b7dc6d0d8..3847d40a4331 100644
--- a/drivers/phy/st/phy-stm32-usb2phy.c
+++ b/drivers/phy/st/phy-stm32-usb2phy.c
@@ -81,6 +81,7 @@ struct stm32_usb2phy {
 	struct regulator *vdd33, *vdda18;
 	enum phy_mode mode;
 	u32 mask_trim1, value_trim1, mask_trim2, value_trim2;
+	bool is_init;
 	struct clk_hw clk48_hw;
 	atomic_t en_refcnt;
 	const struct stm32mp2_usb2phy_hw_data *hw_data;
@@ -293,6 +294,48 @@ static int stm32_usb2phy_disable(struct stm32_usb2phy *phy_dev)
 	return 0;
 }
 
+static int stm32_usb2phy_suspend(struct device *dev)
+{
+	struct stm32_usb2phy *phy_dev = dev_get_drvdata(dev);
+	int ret;
+
+	/*
+	 * Usb2-phy should be turned off since it is not needed for
+	 * wakeup capability. In case usb-remote wakeup is not enabled,
+	 * usb2-phy is already turned off by HCD driver using exit callback
+	 */
+	if (phy_dev->is_init) {
+		ret = stm32_usb2phy_disable(phy_dev);
+		if (ret) {
+			dev_err(dev, "can't disable usb2phy (%d)\n", ret);
+			return ret;
+		}
+	}
+
+	return 0;
+}
+
+static int stm32_usb2phy_resume(struct device *dev)
+{
+	struct stm32_usb2phy *phy_dev = dev_get_drvdata(dev);
+	int ret;
+
+	/*
+	 * If usb2-phy was turned off by suspend call for wakeup then needs
+	 * to be turned back ON in resume. In case usb-remote wakeup is not
+	 * enabled, usb2-phy is already turned ON by HCD driver using init callback
+	 */
+	if (phy_dev->is_init) {
+		ret = stm32_usb2phy_enable(phy_dev);
+		if (ret) {
+			dev_err(dev, "can't enable usb2phy (%d)\n", ret);
+			return ret;
+		}
+	}
+
+	return 0;
+}
+
 static int stm32_usb2phy_set_mode(struct phy *phy, enum phy_mode mode, int submode)
 {
 	int ret;
@@ -386,6 +429,8 @@ static int stm32_usb2phy_init(struct phy *phy)
 		}
 	}
 
+	phy_dev->is_init = true;
+
 	return 0;
 
 error_disable:
@@ -405,6 +450,8 @@ static int stm32_usb2phy_exit(struct phy *phy)
 		return ret;
 	}
 
+	phy_dev->is_init = false;
+
 	return 0;
 }
 
@@ -713,6 +760,9 @@ static int stm32_usb2phy_probe(struct platform_device *pdev)
 	return 0;
 }
 
+static DEFINE_SIMPLE_DEV_PM_OPS(stm32_usb2phy_pm_ops, stm32_usb2phy_suspend,
+				stm32_usb2phy_resume);
+
 static const struct of_device_id stm32_usb2phy_of_match[] = {
 	{ .compatible = "st,stm32mp25-usb2phy" },
 	{ /* sentinel */ },
@@ -723,7 +773,8 @@ static struct platform_driver stm32_usb2phy_driver = {
 	.probe = stm32_usb2phy_probe,
 	.driver = {
 		.name = "stm32-usb2phy",
-		.of_match_table = stm32_usb2phy_of_match
+		.of_match_table = stm32_usb2phy_of_match,
+		.pm = pm_sleep_ptr(&stm32_usb2phy_pm_ops)
 	}
 };
 
-- 
2.39.5

