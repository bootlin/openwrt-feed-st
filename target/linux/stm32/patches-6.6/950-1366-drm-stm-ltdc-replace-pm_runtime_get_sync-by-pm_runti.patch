From 73cc2db18231a1be96ba58d8c1fdae187009be19 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Fri, 6 Sep 2024 13:23:14 +0200
Subject: [PATCH] drm/stm: ltdc: replace pm_runtime_get_sync by
 pm_runtime_resume_and_get

The function pm_runtime_resume_and_get() offers a better error
management than pm_runtime_get_sync().

Change-Id: Ife97d9a94368d39a97a3b1a8edd3bb711c97ad97
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/399633
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/gpu/drm/stm/ltdc.c | 18 +++++++++++-------
 1 file changed, 11 insertions(+), 7 deletions(-)

diff --git a/drivers/gpu/drm/stm/ltdc.c b/drivers/gpu/drm/stm/ltdc.c
index 1e15c5343b0d..5ed71dfcb2ae 100644
--- a/drivers/gpu/drm/stm/ltdc.c
+++ b/drivers/gpu/drm/stm/ltdc.c
@@ -879,9 +879,9 @@ static void ltdc_crtc_atomic_enable(struct drm_crtc *crtc,
 	else
 		pinctrl_pm_select_sleep_state(ddev->dev);
 
-	ret = pm_runtime_get_sync(ddev->dev);
+	ret = pm_runtime_resume_and_get(ddev->dev);
 	if (ret) {
-		DRM_ERROR("Failed to set mode, cannot get sync\n");
+		DRM_ERROR("Failed to enable crtc, cannot resume pm\n");
 		return;
 	}
 
@@ -1473,8 +1473,8 @@ static void ltdc_plane_update(struct drm_plane *plane, struct drm_atomic_state *
 			 plane->base.id, fb->base.id, DRM_RECT_ARG(&src), DRM_RECT_ARG(&dst));
 
 	if (!pm_runtime_active(ddev->dev)) {
-		if (pm_runtime_get_sync(ddev->dev)) {
-			DRM_ERROR("Failed to set plane, cannot get sync\n");
+		if (pm_runtime_resume_and_get(ddev->dev)) {
+			DRM_ERROR("Failed to set plane, cannot resume pm\n");
 			return;
 		}
 	}
@@ -1841,8 +1841,8 @@ static void ltdc_plane_atomic_enable(struct drm_plane *plane,
 	ldev->plane_enabled[plane->index] = true;
 
 	if (!pm_runtime_active(ddev->dev)) {
-		if (pm_runtime_get_sync(ddev->dev)) {
-			DRM_ERROR("Failed to enable plane, cannot get sync\n");
+		if (pm_runtime_resume_and_get(ddev->dev)) {
+			DRM_ERROR("Failed to enable plane, cannot resume pm\n");
 			return;
 		}
 	}
@@ -2557,7 +2557,11 @@ int ltdc_load(struct drm_device *ddev)
 
 	if (def_value) {
 		/* keep runtime active after the probe */
-		pm_runtime_get_sync(ddev->dev);
+		ret = pm_runtime_resume_and_get(ddev->dev);
+		if (ret) {
+			DRM_ERROR("Failed to load driver, cannot resume pm\n");
+			return ret;
+		}
 	} else {
 		/* set to sleep state the pinctrl to stop data trasfert */
 		pinctrl_pm_select_sleep_state(ddev->dev);
-- 
2.39.5

