From 7851d31f1db6208291aaf3a9913c9ed65dcfa4ae Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Cl=C3=A9ment=20Le=20Goffic?= <clement.legoffic@foss.st.com>
Date: Mon, 22 Jul 2024 14:38:49 +0200
Subject: [PATCH] clk: stm32mp21: add ddrperfm clock
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

Add ck_icn_p_ddrperfm clock.

Change-Id: I1bd988b4d8465f73bb983309f7a225c2c1751be2
Signed-off-by: Cl√©ment Le Goffic <clement.legoffic@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/395152
Domain-Review: Antonio Maria BORNEO <antonio.borneo@foss.st.com>
Reviewed-by: Antonio Maria BORNEO <antonio.borneo@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/clk/stm32/clk-stm32mp21.c | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/drivers/clk/stm32/clk-stm32mp21.c b/drivers/clk/stm32/clk-stm32mp21.c
index 642b92d39bba..d2fd5d389c79 100644
--- a/drivers/clk/stm32/clk-stm32mp21.c
+++ b/drivers/clk/stm32/clk-stm32mp21.c
@@ -35,6 +35,7 @@
 #define RCC_SEMCR_SEMCID_MASK	GENMASK(6, 4)
 
 #define STM32MP21_RIFRCC_DBG_ID		73
+#define STM32MP21_RIFRCC_DDRPERFM_ID	104
 #define STM32MP21_RIFRCC_MCO1_ID	108
 #define STM32MP21_RIFRCC_MCO2_ID	109
 #define STM32MP21_RIFRCC_OSPI1_ID	110
@@ -213,6 +214,7 @@ enum enum_gate_cfg {
 	GATE_CSI,
 	GATE_DCMIPP,
 	GATE_DCMIPSSI,
+	GATE_DDRPERFM,
 	GATE_DTS,
 	GATE_ETH1,
 	GATE_ETH1MAC,
@@ -365,6 +367,7 @@ static const struct stm32_gate_cfg stm32mp21_gates[GATE_NB] = {
 	GATE_CFG(GATE_CSI,		RCC_CSICFGR,		1,	0),
 	GATE_CFG(GATE_DCMIPP,		RCC_DCMIPPCFGR,		1,	0),
 	GATE_CFG(GATE_DCMIPSSI,		RCC_DCMIPSSICFGR,	1,	0),
+	GATE_CFG(GATE_DDRPERFM,		RCC_DDRPERFMCFGR,	1,	0),
 	GATE_CFG(GATE_DTS,		RCC_DTSCFGR,		1,	0),
 	GATE_CFG(GATE_ETH1,		RCC_ETH1CFGR,		5,	0),
 	GATE_CFG(GATE_ETH1MAC,		RCC_ETH1CFGR,		1,	0),
@@ -604,6 +607,12 @@ static struct clk_stm32_gate ck_icn_p_dcmipssi = {
 	.hw.init = CLK_HW_INIT_INDEX("ck_icn_p_dcmipssi", ICN_LS_MCU, &clk_stm32_gate_ops, 0),
 };
 
+/* DDRPERMF */
+static struct clk_stm32_gate ck_icn_p_ddrperfm = {
+	.gate_id = GATE_DDRPERFM,
+	.hw.init = CLK_HW_INIT_INDEX("ck_icn_p_ddrperfm", ICN_APB4, &clk_stm32_gate_ops, 0),
+};
+
 /* CRC */
 static struct clk_stm32_gate ck_icn_p_crc = {
 	.gate_id = GATE_CRC,
@@ -1519,6 +1528,7 @@ static const struct clock_config stm32mp21_clock_cfg[] = {
 	STM32_GATE_CFG(CK_BUS_CSI, ck_icn_p_csi, SEC_RIFSC(86)),
 	STM32_GATE_CFG(CK_BUS_DCMIPP, ck_icn_p_dcmipp, SEC_RIFSC(87)),
 	STM32_GATE_CFG(CK_BUS_DCMIPSSI, ck_icn_p_dcmipssi, SEC_RIFSC(87)),
+	STM32_GATE_CFG(CK_BUS_DDRPERFM, ck_icn_p_ddrperfm, SEC_RIFSC(67)),
 	STM32_GATE_CFG(CK_KER_TIM2, ck_ker_tim2, SEC_RIFSC(1)),
 	STM32_GATE_CFG(CK_KER_TIM3, ck_ker_tim3, SEC_RIFSC(2)),
 	STM32_GATE_CFG(CK_KER_TIM4, ck_ker_tim4, SEC_RIFSC(3)),
@@ -2310,6 +2320,7 @@ CS_GATE(ck_icn_p_csi2, ck_icn_apb4, GATE_CSI);
 CS_GATE(ck_icn_p_dcmipp, ck_icn_apb4, GATE_DCMIPP);
 CS_GATE(ck_icn_p_ddrc, ck_icn_apb4, GATE_DDRCAPB);
 CS_GATE(ck_icn_p_ddrcfg, ck_icn_apb4, GATE_DDRCFG);
+CS_GATE(ck_icn_p_ddrperfm, ck_icn_apb4, GATE_DDRPERFM);
 CS_GATE(ck_icn_p_stgen, ck_icn_apb4, GATE_STGEN);
 CS_GATE(ck_sys_dbg, ck_icn_apbdbg, GATE_DBG);
 CS_GATE(ck_icn_p_stm, ck_icn_apbdbg, GATE_STM);
@@ -2616,6 +2627,7 @@ static struct clk_summary *stm32mp21_clock_summary[] = {
 	CS_CLOCK(ck_icn_p_dcmipp),
 	CS_CLOCK(ck_icn_p_ddrc),
 	CS_CLOCK(ck_icn_p_ddrcfg),
+	CS_CLOCK(ck_icn_p_ddrperfm),
 	CS_CLOCK(ck_icn_p_stgen),
 	CS_CLOCK(ck_sys_dbg),
 	CS_CLOCK(ck_icn_p_stm),
-- 
2.39.5

