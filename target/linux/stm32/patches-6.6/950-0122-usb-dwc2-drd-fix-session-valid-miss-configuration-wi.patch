From 21c903cd3a6d01688feac2f4c89ced8cffadaef3 Mon Sep 17 00:00:00 2001
From: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date: Thu, 17 Mar 2022 17:40:04 +0100
Subject: [PATCH] usb: dwc2: drd: fix session valid miss-configuration with
 clock gating

Failing scenario is seen when in DWC2_POWER_DOWN_PARAM_NONE, after a 1st
plug / unplug of gadget to a host port, when using drd.
Upon subsequent unplug / plug, there's a race between:
- USB suspend interrupt / clock gating
- role switch work (callback) to be executed

In case USB suspend interrupt occurs first, dwc2 enters clock gating (e.g.
the driver calls dwc2_gadget_enter_clock_gating).
Then the role switch work ends up calling dwc2_ovr_bvalid(): it overrides
Vbus/A/B bits values (e.g. No-session valid). But since clock gating is
active, BSESVLD keeps the same state (e.g B-session valid).

Upon next plug to a host, role switch gets called again to signal a
B-session valid. BSESVLD is already set. But the session override bits
are miss-aligned, and aren't updated. Upon clock gating exit, BSESVLD gets
cleared.
This will endup in calling dwc2_hsotg_disconnect(), and the driver finally
fails with messages:
- ...dwc2_hsotg_enqueue_setup: failed queue (-11)
At the host side, failures are seen too with messages like:
- ...device descriptor read/64, error -110

Fix this by checking directly BVALOVAL and VBVALOVAL override bits,
instead of BSESVLD. Similar could happen for A session, apply similar
approach for ASESVLD.

Fixes: cbe1e903e5ab ("usb: dwc2: Allow entering clock gating from USB_SUSPEND interrupt")

Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Change-Id: Ia129f7769332975e1d1e931284a608cbefc77a89
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/244583
Reviewed-by: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
---
 drivers/usb/dwc2/drd.c | 8 ++++----
 1 file changed, 4 insertions(+), 4 deletions(-)

--- a/drivers/usb/dwc2/drd.c
+++ b/drivers/usb/dwc2/drd.c
@@ -44,8 +44,8 @@ static int dwc2_ovr_avalid(struct dwc2_h
 	u32 gotgctl = dwc2_readl(hsotg, GOTGCTL);
 
 	/* Check if A-Session is already in the right state */
-	if ((valid && (gotgctl & GOTGCTL_ASESVLD)) ||
-	    (!valid && !(gotgctl & GOTGCTL_ASESVLD)))
+	if ((valid && (gotgctl & GOTGCTL_AVALOVAL) && (gotgctl & GOTGCTL_VBVALOVAL)) ||
+	    (!valid && !(gotgctl & (GOTGCTL_AVALOVAL | GOTGCTL_VBVALOVAL))))
 		return -EALREADY;
 
 	/* Always enable overrides to handle the resume case */
@@ -66,8 +66,8 @@ static int dwc2_ovr_bvalid(struct dwc2_h
 	u32 gotgctl = dwc2_readl(hsotg, GOTGCTL);
 
 	/* Check if B-Session is already in the right state */
-	if ((valid && (gotgctl & GOTGCTL_BSESVLD)) ||
-	    (!valid && !(gotgctl & GOTGCTL_BSESVLD)))
+	if ((valid && (gotgctl & GOTGCTL_BVALOVAL) && (gotgctl & GOTGCTL_VBVALOVAL)) ||
+	    (!valid && !(gotgctl & (GOTGCTL_BVALOVAL | GOTGCTL_VBVALOVAL))))
 		return -EALREADY;
 
 	/* Always enable overrides to handle the resume case */
