From c08a504b3686da30652b037b03dc16ee09fa30f3 Mon Sep 17 00:00:00 2001
From: Eric Fourmont <eric.fourmont-ext@st.com>
Date: Thu, 20 Jun 2024 19:42:03 +0200
Subject: [PATCH] media: stm32: dcmipp: add 32bit RGB format in pixelcap

Add support for capturing in 4 32bit RGB formats from main
and aux pipes.

Change-Id: Ia16a152626b0098ebaf647d8a0c03eed5a360d90
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/384901
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Domain-Review: Eric FOURMONT <eric.fourmont-ext@st.com>
Tested-by: Eric FOURMONT <eric.fourmont-ext@st.com>

# Conflicts:
#	drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
---
 .../media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c | 7 +++++++
 1 file changed, 7 insertions(+)

--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
@@ -118,6 +118,10 @@ static const struct dcmipp_pixelcap_pix_
 	PIXMAP_MBUS_PFMT(YUV8_1X24, GREY, 1, DCMIPP_PxPPCR_FORMAT_Y8, 0),
 	PIXMAP_MBUS_PFMT(RGB888_1X24, RGB24, 1, DCMIPP_PxPPCR_FORMAT_RGB888, 1),
 	PIXMAP_MBUS_PFMT(RGB888_1X24, BGR24, 1, DCMIPP_PxPPCR_FORMAT_RGB888, 0),
+	PIXMAP_MBUS_PFMT(RGB888_1X24, ARGB32, 1, DCMIPP_PxPPCR_FORMAT_ARGB8888, 1),
+	PIXMAP_MBUS_PFMT(RGB888_1X24, ABGR32, 1, DCMIPP_PxPPCR_FORMAT_ARGB8888, 0),
+	PIXMAP_MBUS_PFMT(RGB888_1X24, RGBA32, 1, DCMIPP_PxPPCR_FORMAT_RGBA8888, 1),
+	PIXMAP_MBUS_PFMT(RGB888_1X24, BGRA32, 1, DCMIPP_PxPPCR_FORMAT_RGBA8888, 0),
 
 	/* Semiplanar & planar formats (plane_nb > 1) are only supported on main pipe */
 	PIXMAP_MBUS_PFMT(YUV8_1X24, NV12, 2, DCMIPP_P1PPCR_FORMAT_NV21, 0),
@@ -221,6 +225,9 @@ static inline int hdw_pixel_alignment(u3
 	case V4L2_PIX_FMT_BGR24:
 		return 4;/* 2^4 = 16 pixels = 48 bytes */
 	case V4L2_PIX_FMT_ARGB32:
+	case V4L2_PIX_FMT_ABGR32:
+	case V4L2_PIX_FMT_RGBA32:
+	case V4L2_PIX_FMT_BGRA32:
 		return 2;/* 2^2  = 4 pixels = 16 bytes */
 	default:
 		return 0;
