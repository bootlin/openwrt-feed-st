From 326eea71a0e4afb5681e83eb764508d02b5bc525 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Mon, 20 Nov 2023 16:58:01 +0100
Subject: [PATCH] drm/stm: ltdc: refactor interrupt management

Rework interrupt management to sinmplify driver.

Change-Id: Icf5a6e78a9f3d329c3c346d921cb5aa422ac3fe8
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
---
 drivers/gpu/drm/stm/ltdc.c | 29 +++++++++++------------------
 1 file changed, 11 insertions(+), 18 deletions(-)

diff --git a/drivers/gpu/drm/stm/ltdc.c b/drivers/gpu/drm/stm/ltdc.c
index e53faff42f6d..91131753b1fb 100644
--- a/drivers/gpu/drm/stm/ltdc.c
+++ b/drivers/gpu/drm/stm/ltdc.c
@@ -187,6 +187,7 @@
 #define IER_FUEIE	BIT(6)		/* Fifo Underrun Error Interrupt Enable */
 #define IER_CRCIE	BIT(7)		/* CRC Error Interrupt Enable */
 #define IER_FURIE	BIT(8)		/* Fifo Underrun Rotation Interrupt Enable */
+#define IER_MASK (IER_LIE | IER_FUWIE | IER_TERRIE | IER_RRIE | IER_FUEIE | IER_CRCIE | IER_FURIE)
 
 #define CPSR_CYPOS	GENMASK(15, 0)	/* Current Y position */
 
@@ -849,9 +850,6 @@ static void ltdc_crtc_atomic_enable(struct drm_crtc *crtc,
 	/* Sets the background color value */
 	regmap_write(ldev->regmap, LTDC_BCCR, BCCR_BCBLACK);
 
-	/* Enable IRQ */
-	regmap_set_bits(ldev->regmap, LTDC_IER, IER_FUWIE | IER_FUEIE | IER_TERRIE);
-
 	if (ldev->caps.crtc_rotation) {
 		rota0_buf = (u32)ldev->rot_mem->base;
 		rota1_buf = (u32)ldev->rot_mem->base + (ldev->rot_mem->size >> 1);
@@ -882,6 +880,12 @@ static void ltdc_crtc_atomic_enable(struct drm_crtc *crtc,
 		}
 	}
 
+	/* Enable error IRQ */
+	regmap_set_bits(ldev->regmap, LTDC_IER, IER_FUWIE | IER_FUEIE | IER_TERRIE);
+
+	if (ldev->caps.crtc_rotation)
+		regmap_set_bits(ldev->regmap, LTDC_IER, IER_FURIE);
+
 	/* Commit shadow registers = update planes at next vblank */
 	if (!ldev->caps.plane_reg_shadow)
 		regmap_set_bits(ldev->regmap, LTDC_SRCR, SRCR_VBR);
@@ -904,11 +908,8 @@ static void ltdc_crtc_atomic_disable(struct drm_crtc *crtc,
 	for (layer_index = 0; layer_index < ldev->caps.nb_layers; layer_index++)
 		regmap_write_bits(ldev->regmap, LTDC_L1CR + layer_index * LAY_OFS, LXCR_MASK, 0);
 
-	/* disable IRQ */
-	regmap_clear_bits(ldev->regmap, LTDC_IER, IER_FUWIE | IER_FUEIE | IER_TERRIE);
-
-	if (ldev->caps.crtc_rotation)
-		regmap_clear_bits(ldev->regmap, LTDC_IER, IER_RRIE);
+	/* disable IRQ errors */
+	regmap_clear_bits(ldev->regmap, LTDC_IER, IER_FUWIE | IER_FUEIE | IER_TERRIE | IER_FURIE);
 
 	/* immediately commit disable of layers before switching off LTDC */
 	if (!ldev->caps.plane_reg_shadow)
@@ -2353,16 +2354,8 @@ int ltdc_load(struct drm_device *ddev)
 		goto err;
 	}
 
-	/* Disable interrupts */
-	if (ldev->caps.fifo_threshold)
-		regmap_clear_bits(ldev->regmap, LTDC_IER, IER_LIE | IER_FUWIE |
-				  IER_TERRIE);
-	else
-		regmap_clear_bits(ldev->regmap, LTDC_IER, IER_LIE | IER_FUWIE |
-				  IER_TERRIE | IER_FUEIE);
-
-	if (ldev->caps.crtc_rotation)
-		regmap_clear_bits(ldev->regmap, LTDC_IER, IER_FURIE);
+	/* Disable all interrupts */
+	regmap_clear_bits(ldev->regmap, LTDC_IER, IER_MASK);
 
 	DRM_DEBUG_DRIVER("ltdc hw version 0x%08x\n", ldev->caps.hw_version);
 
-- 
2.39.5

