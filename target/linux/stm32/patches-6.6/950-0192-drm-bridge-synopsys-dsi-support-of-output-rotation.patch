From c21e0f6a983c28873b5cb846d1e625ca0616ae02 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Fri, 30 Jun 2023 10:18:05 +0200
Subject: [PATCH] drm/bridge/synopsys: dsi: support of output rotation

Switch with & height if a rotaion is required.

Change-Id: I520750f706431e2d0b0d870dd351b2e212182e9f
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
---
 drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c | 50 ++++++++++++++-----
 1 file changed, 38 insertions(+), 12 deletions(-)

diff --git a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
index f3ec5dfcf3e6..4890e4e65a51 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
@@ -13,6 +13,7 @@
 #include <linux/debugfs.h>
 #include <linux/iopoll.h>
 #include <linux/module.h>
+#include <linux/of_device.h>
 #include <linux/platform_device.h>
 #include <linux/pm_runtime.h>
 #include <linux/reset.h>
@@ -251,6 +252,7 @@ struct dw_mipi_dsi {
 	u32 lanes;
 	u32 format;
 	unsigned long mode_flags;
+	int rotation;
 
 #ifdef CONFIG_DEBUG_FS
 	struct dentry *debugfs;
@@ -360,6 +362,12 @@ static int dw_mipi_dsi_host_attach(struct mipi_dsi_host *host,
 			return ret;
 	}
 
+	/* check if a rotation is required on panel */
+	ret = of_property_read_u32(bridge->of_node, "rotation", &dsi->rotation);
+	if (ret < 0)
+		/* fail to get rotation, set 0 by default */
+		dsi->rotation = 0;
+
 	return 0;
 }
 
@@ -695,11 +703,16 @@ static void dw_mipi_dsi_video_packet_config(struct dw_mipi_dsi *dsi,
 	 * DSI_VNPCR.NPSIZE... especially because this driver supports
 	 * non-burst video modes, see dw_mipi_dsi_video_mode_config()...
 	 */
-
-	dsi_write(dsi, DSI_VID_PKT_SIZE,
-		       dw_mipi_is_dual_mode(dsi) ?
-				VID_PKT_SIZE(mode->hdisplay / 2) :
-				VID_PKT_SIZE(mode->hdisplay));
+	if (dsi->rotation == 90 || dsi->rotation == 270)
+		dsi_write(dsi, DSI_VID_PKT_SIZE,
+			  dw_mipi_is_dual_mode(dsi) ?
+			  VID_PKT_SIZE(mode->vdisplay / 2) :
+			  VID_PKT_SIZE(mode->vdisplay));
+	else
+		dsi_write(dsi, DSI_VID_PKT_SIZE,
+			  dw_mipi_is_dual_mode(dsi) ?
+			  VID_PKT_SIZE(mode->hdisplay / 2) :
+			  VID_PKT_SIZE(mode->hdisplay));
 }
 
 static void dw_mipi_dsi_command_mode_config(struct dw_mipi_dsi *dsi)
@@ -741,9 +754,15 @@ static void dw_mipi_dsi_line_timer_config(struct dw_mipi_dsi *dsi,
 {
 	u32 htotal, hsa, hbp, lbcc;
 
-	htotal = mode->htotal;
-	hsa = mode->hsync_end - mode->hsync_start;
-	hbp = mode->htotal - mode->hsync_end;
+	if (dsi->rotation == 90 || dsi->rotation == 270) {
+		htotal = mode->vtotal;
+		hsa = mode->vsync_end - mode->vsync_start;
+		hbp = mode->vtotal - mode->vsync_end;
+	} else {
+		htotal = mode->htotal;
+		hsa = mode->hsync_end - mode->hsync_start;
+		hbp = mode->htotal - mode->hsync_end;
+	}
 
 	/*
 	 * TODO dw drv improvements
@@ -764,10 +783,17 @@ static void dw_mipi_dsi_vertical_timing_config(struct dw_mipi_dsi *dsi,
 {
 	u32 vactive, vsa, vfp, vbp;
 
-	vactive = mode->vdisplay;
-	vsa = mode->vsync_end - mode->vsync_start;
-	vfp = mode->vsync_start - mode->vdisplay;
-	vbp = mode->vtotal - mode->vsync_end;
+	if (dsi->rotation == 90 || dsi->rotation == 270) {
+		vactive = mode->hdisplay;
+		vsa = mode->hsync_end - mode->hsync_start;
+		vfp = mode->hsync_start - mode->hdisplay;
+		vbp = mode->htotal - mode->hsync_end;
+	} else {
+		vactive = mode->vdisplay;
+		vsa = mode->vsync_end - mode->vsync_start;
+		vfp = mode->vsync_start - mode->vdisplay;
+		vbp = mode->vtotal - mode->vsync_end;
+	}
 
 	dsi_write(dsi, DSI_VID_VACTIVE_LINES, vactive);
 	dsi_write(dsi, DSI_VID_VSA_LINES, vsa);
-- 
2.39.5

