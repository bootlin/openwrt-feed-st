From 47399bb3b804cbb695e060b2eeb700fea3406568 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Wed, 24 May 2023 18:58:37 +0200
Subject: [PATCH] drm/bridge/synopsys: dsi: Parse all dsi node

Scan all DSI subnodes to get a panel or bridge linked to the DSI
bridge (Panel or bridge index not fix to 1).
If at least one endpoint is disabled, continue probing, else if at
least one endpoint returned an error (ie -EPROBE_DEFER) then
stop probing.

Change-Id: If4f9ba0d37e67f58f9c3112432a59aacbe068e1f
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
---
 drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c | 32 ++++++++++++++-----
 1 file changed, 24 insertions(+), 8 deletions(-)

diff --git a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
index 04d4a1a10698..f3ec5dfcf3e6 100644
--- a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
@@ -316,7 +316,7 @@ static int dw_mipi_dsi_host_attach(struct mipi_dsi_host *host,
 	struct dw_mipi_dsi *dsi = host_to_dsi(host);
 	const struct dw_mipi_dsi_plat_data *pdata = dsi->plat_data;
 	struct drm_bridge *bridge;
-	int ret;
+	int ret, nb_endpoints, i;
 
 	if (device->lanes > dsi->plat_data->max_data_lanes) {
 		dev_err(dsi->dev, "the number of data lanes(%u) is too many\n",
@@ -329,14 +329,30 @@ static int dw_mipi_dsi_host_attach(struct mipi_dsi_host *host,
 	dsi->format = device->format;
 	dsi->mode_flags = device->mode_flags;
 
-	bridge = devm_drm_of_get_bridge(dsi->dev, dsi->dev->of_node, 1, 0);
-	if (IS_ERR(bridge))
-		return PTR_ERR(bridge);
-
-	bridge->pre_enable_prev_first = true;
-	dsi->panel_bridge = bridge;
+	nb_endpoints = of_graph_get_endpoint_count(dsi->dev->of_node);
+	if (!nb_endpoints)
+		return -ENODEV;
 
-	drm_bridge_add(&dsi->bridge);
+	for (i = 1; i < nb_endpoints; i++) {
+		bridge = devm_drm_of_get_bridge(dsi->dev, dsi->dev->of_node, i, 0);
+
+		/*
+		 * If at least one endpoint is -ENODEV, continue probing,
+		 * else if at least one endpoint returned an error
+		 * (ie -EPROBE_DEFER) then stop probing.
+		 */
+		if (IS_ERR(bridge)) {
+			if (PTR_ERR(bridge) == -ENODEV)
+				continue;
+			else
+				return PTR_ERR(bridge);
+		} else {
+			bridge->pre_enable_prev_first = true;
+			dsi->panel_bridge = bridge;
+			drm_bridge_add(&dsi->bridge);
+			break;
+		}
+	}
 
 	if (pdata->host_ops && pdata->host_ops->attach) {
 		ret = pdata->host_ops->attach(pdata->priv_data, device);
-- 
2.39.5

