From 4db5a42610eaa2c23e172663dbc6ab6383b5f650 Mon Sep 17 00:00:00 2001
From: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date: Sat, 6 May 2023 18:46:22 +0200
Subject: [PATCH] kbuild: add external device tree build to dtbs target

Add possibility to build device trees defined into the extra folder placed
either inside current device tree sources depending on architecture:
- arch/arm64/boot/dts/st/external-dt/linux for arm64
- arch/arm/boot/dts/st/external-dt/linux for arm
or into a path specified with KBUILD_EXTDTS in build command.

This "external-dt/linux" folder can be added to kernel device tree sources
using the following git submodule command:
- for arm:
git submodule add ssh://${USER}@gerrit.st.com:29418/mpu/oe/st/dt-stm32mp \
 arch/arm/boot/dts/st/external-dt
- for arm64:
git submodule add ssh://${USER}@gerrit.st.com:29418/mpu/oe/st/dt-stm32mp \
 arch/arm64/boot/dts/st/external-dt

Or it can be cloned outside kernel sources using the following command:
git clone ssh://${USER}@gerrit.st.com:29418/mpu/oe/st/dt-stm32mp
Then you will have to add KBUILD_EXTDTS=<path_to_dt-stm32mp>/linux to your
build command line.

Then, you can run:
> internal DT
(arm)   make stm32mp157f-dk2.dtb
(arm64) make stm32mp257f-ev1.dtb
> external DT inside DT source tree
(arm)   make stm32mp157f-dk2-ostl.dtb
(arm64) make stm32mp257f-ev1-ostl.dtb
> external DT outside kernel tree
(arm)   make stm32mp157f-dk2-ostl.dtb KBUILD_EXTDTS=<path_to_dt-stm32mp>/linux
(arm64) make stm32mp257f-ev1-ostl.dtb KBUILD_EXTDTS=<path_to_dt-stm32mp>/linux

Change-Id: Iede3a419744dcdcad6ba7f6d2cccf7aa4df1227f
Signed-off-by: Alexandre Torgue <alexandre.torgue@foss.st.com>
Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
---
 Makefile | 32 +++++++++++++++++++++++++++++---
 1 file changed, 29 insertions(+), 3 deletions(-)

diff --git a/Makefile b/Makefile
index cef1e15ad760..4562dacf5c8c 100644
--- a/Makefile
+++ b/Makefile
@@ -1385,17 +1385,43 @@ ifneq ($(wildcard $(srctree)/arch/$(SRCARCH)/boot/dts/),)
 dtstree := arch/$(SRCARCH)/boot/dts
 endif
 
-ifneq ($(dtstree),)
+ifdef CONFIG_ARCH_STM32
+ifeq ("$(SRCARCH)", "arm")
+export TARGET_ARM32=y
+else ifeq ("$(SRCARCH)", "arm64")
+export TARGET_ARM64=y
+endif
+
+stdtstree := $(dtstree)/st
+
+# Default path for external device trees
+KBUILD_EXTDTS ?= $(realpath $(srctree))/$(stdtstree)/external-dt/linux
+ifneq ($(wildcard $(KBUILD_EXTDTS)),)
+export DTS_INCLUDE := $(srctree)/$(stdtstree)
+endif
+endif #ARCH_STM32
+
+ifneq ($(stdtstree),)
+
+KBUILD_EXTDTB := $(or $(and $(wildcard $(KBUILD_EXTDTS)), 1), 0)
 
 %.dtb: dtbs_prepare
-	$(Q)$(MAKE) $(build)=$(dtstree) $(dtstree)/$@
+	$(Q)$(MAKE) $(build)=$(stdtstree) $(dtstree)/$@ || ( \
+	test ! -e $(dtstree)/$@ -a $(KBUILD_EXTDTB) -eq 1  && ( \
+		echo "Looking for $(patsubst st/%.dtb,%.dtb,$@) into $(KBUILD_EXTDTS)"; \
+		$(MAKE) $(build)=$(stdtstree) src=$(KBUILD_EXTDTS) $(dtstree)/$@ || \
+		/bin/true) || /bin/true)
 
 %.dtbo: dtbs_prepare
 	$(Q)$(MAKE) $(build)=$(dtstree) $(dtstree)/$@
 
 PHONY += dtbs dtbs_prepare dtbs_install dtbs_check
 dtbs: dtbs_prepare
-	$(Q)$(MAKE) $(build)=$(dtstree)
+	$(Q)$(MAKE) $(build)=$(stdtstree)
+	$(Q)test $(KBUILD_EXTDTB) -eq 1 && ( \
+		echo "Looking for device trees into $(KBUILD_EXTDTS)"; \
+		$(MAKE) $(build)=$(stdtstree) src=$(KBUILD_EXTDTS) || \
+		/bin/true) || /bin/true
 
 # include/config/kernel.release is actually needed when installing DTBs because
 # INSTALL_DTBS_PATH contains $(KERNELRELEASE). However, we do not want to make
-- 
2.39.5

