From 8862271aa97a1f070ab77fe5af21ddba518b1fcf Mon Sep 17 00:00:00 2001
From: Cheick Traore <cheick.traore-ext@st.com>
Date: Mon, 12 Aug 2024 10:59:57 +0200
Subject: [PATCH] iio: adc: stm32: add support for stm32mp23

Add support for STM32MP23 SoC. As STM32MP25 SoC, it has 3 ADCs, split
into two blocks: ADC12 (ADC1 & ADC2) are tightly coupled and ADC3 which
is managed independently.

As on STM32MP25 SoC, each ADC is a 12-bits successive approximation
analog-to-digital converter, with up to 20 multiplexed channels that can
be configured as single ended or differential. ADC resolution ranges
from 6 to 12 bits.

It also use the same core configuration as STM32MP25 SoC but they have
not the same trigger list because Timer20 is not available on STM32MP23
SoC.

Change-Id: I2ccff5242acd90f502e1a4443ed79e87c40a716d
Signed-off-by: Cheick Traore <cheick.traore-ext@st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/397728
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Domain-Review: Fabrice GASNIER <fabrice.gasnier@foss.st.com>
Reviewed-by: Fabrice GASNIER <fabrice.gasnier@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/iio/adc/stm32-adc-core.c |  3 ++
 drivers/iio/adc/stm32-adc.c      | 76 ++++++++++++++++++++++++++++++++
 2 files changed, 79 insertions(+)

diff --git a/drivers/iio/adc/stm32-adc-core.c b/drivers/iio/adc/stm32-adc-core.c
index c24425995067..b924b39b65ed 100644
--- a/drivers/iio/adc/stm32-adc-core.c
+++ b/drivers/iio/adc/stm32-adc-core.c
@@ -1071,6 +1071,9 @@ static const struct of_device_id stm32_adc_of_match[] = {
 	}, {
 		.compatible = "st,stm32mp21-adc-core",
 		.data = (void *)&stm32mp21_adc_priv_cfg
+	}, {
+		.compatible = "st,stm32mp23-adc-core",
+		.data = (void *)&stm32mp25_adc_priv_cfg
 	}, {
 		.compatible = "st,stm32mp25-adc-core",
 		.data = (void *)&stm32mp25_adc_priv_cfg
diff --git a/drivers/iio/adc/stm32-adc.c b/drivers/iio/adc/stm32-adc.c
index e2fa4d4c89c1..54843f364bd5 100644
--- a/drivers/iio/adc/stm32-adc.c
+++ b/drivers/iio/adc/stm32-adc.c
@@ -634,6 +634,64 @@ static struct stm32_adc_trig_info stm32mp21_adc2_trigs[] = {
 	{},
 };
 
+/* STM32MP23 external trigger sources for ADC12 */
+static struct stm32_adc_trig_info stm32mp23_adc12_trigs[] = {
+	{ TIM1_TRGO, STM32_EXT0 },
+	{ TIM1_TRGO2, STM32_EXT1 },
+	{ TIM8_TRGO, STM32_EXT2 },
+	{ TIM8_TRGO2, STM32_EXT3 },
+	{ TIM2_TRGO, STM32_EXT6 },
+	{ TIM3_TRGO, STM32_EXT7 },
+	{ TIM4_TRGO, STM32_EXT8 },
+	{ TIM5_TRGO, STM32_EXT9 },
+	{ TIM6_TRGO, STM32_EXT10 },
+	{ TIM15_TRGO, STM32_EXT11 },
+	{ TIM1_CH1, STM32_EXT12 },
+	{ TIM1_CH2, STM32_EXT13 },
+	{ TIM1_CH3, STM32_EXT14 },
+	{ TIM2_CH2, STM32_EXT18 },
+	{ TIM3_CH4, STM32_EXT19 },
+	{ TIM4_CH4, STM32_EXT20 },
+	{ TIM5_CH1, STM32_EXT21 },
+	{ TIM12_CH1, STM32_EXT22 },
+	{ LPTIM1_CH1, STM32_EXT24 },
+	{ LPTIM2_CH1, STM32_EXT25 },
+	{ LPTIM3_CH1, STM32_EXT26 },
+	{ LPTIM4_CH1, STM32_EXT27 },
+	{ LPTIM5_OUT, STM32_EXT28 },
+	{},
+};
+
+/* STM32MP23 external trigger sources for ADC3 */
+static struct stm32_adc_trig_info stm32mp23_adc3_trigs[] = {
+	{ TIM1_TRGO, STM32_EXT0 },
+	{ TIM1_TRGO2, STM32_EXT1 },
+	{ TIM8_TRGO, STM32_EXT2 },
+	{ TIM8_TRGO2, STM32_EXT3 },
+	{ TIM2_TRGO, STM32_EXT6 },
+	{ TIM3_TRGO, STM32_EXT7 },
+	{ TIM4_TRGO, STM32_EXT8 },
+	{ TIM5_TRGO, STM32_EXT9 },
+	{ TIM6_TRGO, STM32_EXT10 },
+	{ TIM7_TRGO, STM32_EXT11 },
+	{ TIM15_TRGO, STM32_EXT12 },
+	{ TIM17_OC1, STM32_EXT13 },
+	{ TIM1_CH3, STM32_EXT14 },
+	{ TIM8_CH1, STM32_EXT15 },
+	{ TIM2_CH1, STM32_EXT17 },
+	{ TIM2_CH3, STM32_EXT18 },
+	{ TIM3_CH1, STM32_EXT19 },
+	{ TIM4_CH1, STM32_EXT20 },
+	{ TIM5_CH3, STM32_EXT21 },
+	{ TIM12_CH1, STM32_EXT22 },
+	{ LPTIM1_CH1, STM32_EXT24 },
+	{ LPTIM2_CH1, STM32_EXT25 },
+	{ LPTIM3_CH1, STM32_EXT26 },
+	{ LPTIM4_CH1, STM32_EXT27 },
+	{ LPTIM5_OUT, STM32_EXT28 },
+	{},
+};
+
 /* STM32MP25 external trigger sources for ADC12 */
 static struct stm32_adc_trig_info stm32mp25_adc12_trigs[] = {
 	{ TIM1_TRGO, STM32_EXT0 },
@@ -3203,6 +3261,23 @@ static const struct stm32_adc_cfg stm32mp21_adc_cfg = {
 	.vref_charac = 1800,
 };
 
+static const struct stm32_adc_cfg stm32mp23_adc_cfg = {
+	.regs = &stm32mp25_adc_regspec,
+	.adc_info = &stm32mp25_adc_info,
+	.trigs = { stm32mp23_adc12_trigs, stm32mp23_adc3_trigs },
+	.has_oversampling = true,
+	.has_presel = true,
+	.start_conv = stm32h7_adc_start_conv,
+	.stop_conv = stm32h7_adc_stop_conv,
+	.prepare = stm32mp25_adc_prepare,
+	.unprepare = stm32mp25_adc_unprepare,
+	.smp_cycles = stm32mp25_adc_smp_cycles,
+	.irq_clear = stm32h7_adc_irq_clear,
+	.set_ovs = stm32h7_adc_set_ovs,
+	.ts_int_ch = stm32_adc_min_ts_mp25,
+	.vref_charac = 1800,
+};
+
 static const struct stm32_adc_cfg stm32mp25_adc_cfg = {
 	.regs = &stm32mp25_adc_regspec,
 	.adc_info = &stm32mp25_adc_info,
@@ -3226,6 +3301,7 @@ static const struct of_device_id stm32_adc_of_match[] = {
 	{ .compatible = "st,stm32mp1-adc", .data = (void *)&stm32mp1_adc_cfg },
 	{ .compatible = "st,stm32mp13-adc", .data = (void *)&stm32mp13_adc_cfg },
 	{ .compatible = "st,stm32mp21-adc", .data = (void *)&stm32mp21_adc_cfg },
+	{ .compatible = "st,stm32mp23-adc", .data = (void *)&stm32mp23_adc_cfg },
 	{ .compatible = "st,stm32mp25-adc", .data = (void *)&stm32mp25_adc_cfg },
 	{},
 };
-- 
2.39.5

