From f120b6decfe6ba4481cb5a811f564401865fd4c9 Mon Sep 17 00:00:00 2001
From: Antonio Borneo <antonio.borneo@foss.st.com>
Date: Tue, 28 May 2024 12:09:30 +0200
Subject: [PATCH] irqchip/stm32mp-exti: simplify propagation to parent
 controller

The EXTI driver _must_ have a parent interrupt controller; probe
fails if the parent interrupt controller is missing.
Thus, there is no need to check if the current irq_data has a
parent chip as this check is always true.

Simplify the code by dropping the useless check for parent's chip.

Signed-off-by: Antonio Borneo <antonio.borneo@foss.st.com>
Change-Id: I18f33a9054c34891b60adff7d04c095feb530731
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/383197
Domain-Review: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/irqchip/irq-stm32mp-exti.c | 20 ++++----------------
 1 file changed, 4 insertions(+), 16 deletions(-)

diff --git a/drivers/irqchip/irq-stm32mp-exti.c b/drivers/irqchip/irq-stm32mp-exti.c
index 2958fbcfbda1..069a9addabe4 100644
--- a/drivers/irqchip/irq-stm32mp-exti.c
+++ b/drivers/irqchip/irq-stm32mp-exti.c
@@ -337,8 +337,7 @@ static void stm32mp_exti_eoi(struct irq_data *d)
 
 	raw_spin_unlock(&chip_data->rlock);
 
-	if (d->parent_data->chip)
-		irq_chip_eoi_parent(d);
+	irq_chip_eoi_parent(d);
 }
 
 static void stm32mp_exti_mask(struct irq_data *d)
@@ -350,8 +349,7 @@ static void stm32mp_exti_mask(struct irq_data *d)
 	chip_data->mask_cache = stm32mp_exti_clr_bit(d, bank->imr_ofst);
 	raw_spin_unlock(&chip_data->rlock);
 
-	if (d->parent_data->chip)
-		irq_chip_mask_parent(d);
+	irq_chip_mask_parent(d);
 }
 
 static void stm32mp_exti_unmask(struct irq_data *d)
@@ -363,8 +361,7 @@ static void stm32mp_exti_unmask(struct irq_data *d)
 	chip_data->mask_cache = stm32mp_exti_set_bit(d, bank->imr_ofst);
 	raw_spin_unlock(&chip_data->rlock);
 
-	if (d->parent_data->chip)
-		irq_chip_unmask_parent(d);
+	irq_chip_unmask_parent(d);
 }
 
 static int stm32mp_exti_set_type(struct irq_data *d, unsigned int type)
@@ -422,15 +419,6 @@ static int stm32mp_exti_set_wake(struct irq_data *d, unsigned int on)
 	return 0;
 }
 
-static int stm32mp_exti_set_affinity(struct irq_data *d,
-				     const struct cpumask *dest, bool force)
-{
-	if (d->parent_data->chip)
-		return irq_chip_set_affinity_parent(d, dest, force);
-
-	return IRQ_SET_MASK_OK_DONE;
-}
-
 static int stm32mp_exti_suspend(struct device *dev)
 {
 	struct stm32mp_exti_host_data *host_data = dev_get_drvdata(dev);
@@ -480,7 +468,7 @@ static struct irq_chip stm32mp_exti_chip = {
 	.irq_set_type		= stm32mp_exti_set_type,
 	.irq_set_wake		= stm32mp_exti_set_wake,
 	.flags			= IRQCHIP_MASK_ON_SUSPEND,
-	.irq_set_affinity	= IS_ENABLED(CONFIG_SMP) ? stm32mp_exti_set_affinity : NULL,
+	.irq_set_affinity	= IS_ENABLED(CONFIG_SMP) ? irq_chip_set_affinity_parent : NULL,
 };
 
 static struct irq_chip stm32mp_exti_chip_direct = {
-- 
2.39.5

