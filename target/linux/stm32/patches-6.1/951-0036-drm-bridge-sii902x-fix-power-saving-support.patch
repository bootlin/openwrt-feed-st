From 19e2322c011db0d88bc803f4b81027057b647320 Mon Sep 17 00:00:00 2001
From: Eric Fourmont <eric.fourmont-ext@st.com>
Date: Wed, 3 Apr 2024 11:35:48 +0200
Subject: [PATCH 0036/1141] drm/bridge: sii902x: fix power saving support

fix compilation issue since 'v6.1.82' LTS merge

Signed-off-by: Eric Fourmont <eric.fourmont-ext@st.com>
Change-Id: I811eae6fd4bf96d0f20f8d7a113aafa963debeda
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/370937
Domain-Review: Yannick FERTRE <yannick.fertre@foss.st.com>
Tested-by: Yannick FERTRE <yannick.fertre@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 drivers/gpu/drm/bridge/sii902x.c | 32 ++++++++++++++++++++++----------
 1 file changed, 22 insertions(+), 10 deletions(-)

diff --git a/drivers/gpu/drm/bridge/sii902x.c b/drivers/gpu/drm/bridge/sii902x.c
index 36b25e25ebb1..8f58c698a976 100644
--- a/drivers/gpu/drm/bridge/sii902x.c
+++ b/drivers/gpu/drm/bridge/sii902x.c
@@ -177,6 +177,7 @@ struct sii902x {
 	struct drm_connector connector;
 	struct gpio_desc *reset_gpio;
 	struct i2c_mux_core *i2cmux;
+	struct regulator_bulk_data supplies[2];
 	bool sink_is_hdmi;
 	/*
 	 * Mutex protects audio and video functions from interfering
@@ -1107,7 +1108,6 @@ static int sii902x_probe(struct i2c_client *client,
 	struct device *dev = &client->dev;
 	struct device_node *endpoint;
 	struct sii902x *sii902x;
-	static const char * const supplies[] = {"iovcc", "cvcc12"};
 	int ret;
 
 	ret = i2c_check_functionality(client->adapter,
@@ -1158,11 +1158,27 @@ static int sii902x_probe(struct i2c_client *client,
 
 	mutex_init(&sii902x->mutex);
 
-	ret = devm_regulator_bulk_get_enable(dev, ARRAY_SIZE(supplies), supplies);
+	sii902x->supplies[0].supply = "iovcc";
+	sii902x->supplies[1].supply = "cvcc12";
+	ret = devm_regulator_bulk_get(dev, ARRAY_SIZE(sii902x->supplies),
+				      sii902x->supplies);
 	if (ret < 0)
-		return dev_err_probe(dev, ret, "Failed to enable supplies");
+		return ret;
+
+	ret = regulator_bulk_enable(ARRAY_SIZE(sii902x->supplies),
+				    sii902x->supplies);
+	if (ret < 0) {
+		dev_err_probe(dev, ret, "Failed to enable supplies");
+		return ret;
+	}
 
-	return sii902x_init(sii902x);
+	ret = sii902x_init(sii902x);
+	if (ret < 0) {
+		regulator_bulk_disable(ARRAY_SIZE(sii902x->supplies),
+				       sii902x->supplies);
+	}
+
+	return ret;
 }
 
 static void sii902x_remove(struct i2c_client *client)
@@ -1181,8 +1197,6 @@ static int sii902x_pm_suspend(struct device *dev)
 	struct i2c_client *client = to_i2c_client(dev);
 	struct sii902x *sii902x = i2c_get_clientdata(client);
 
-	DRM_DEBUG_DRIVER("\n");
-
 	if (sii902x->reset_gpio)
 		gpiod_set_value(sii902x->reset_gpio, 1);
 
@@ -1205,12 +1219,10 @@ static int sii902x_pm_resume(struct device *dev)
 	};
 	int ret;
 
-	DRM_DEBUG_DRIVER("\n");
-
 	ret = regulator_bulk_enable(ARRAY_SIZE(sii902x->supplies),
 				    sii902x->supplies);
 	if (ret) {
-		DRM_ERROR("regulator_bulk_enable failed\n");
+		dev_err(&sii902x->i2c->dev, "regulator_bulk_enable failed\n");
 		return ret;
 	}
 
@@ -1221,7 +1233,7 @@ static int sii902x_pm_resume(struct device *dev)
 
 	ret = i2c_transfer(client->adapter, &msg, 1);
 	if (ret < 0)
-		DRM_ERROR("Failed to disable CEC device!\n");
+		dev_err(&sii902x->i2c->dev, "Failed to disable CEC device!\n");
 
 	if (client->irq > 0)
 		regmap_update_bits(sii902x->regmap, SII902X_INT_ENABLE,
-- 
2.39.2

