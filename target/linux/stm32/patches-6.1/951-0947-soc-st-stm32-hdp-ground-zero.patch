From 78404309309a2b29b737974553bbbb6f20300674 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Cl=C3=A9ment=20Le=20Goffic?= <clement.legoffic@foss.st.com>
Date: Fri, 17 Nov 2023 16:08:59 +0100
Subject: [PATCH 0947/1141] soc: st: stm32-hdp ground zero
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

To prepare the new stm32-hdp driver and bindings, remove all
existing related reference to stm32-hdp.

Change-Id: Ifdb7f7e84270f0a3bf8d6fd89efbc3da2218beb1
Signed-off-by: Cl√©ment Le Goffic <clement.legoffic@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/345017
Domain-Review: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
Reviewed-by: Antonio Maria BORNEO <antonio.borneo@foss.st.com>
---
 .../bindings/soc/stm32/stm32_hdp.txt          |  39 ---
 drivers/soc/st/Kconfig                        |   8 -
 drivers/soc/st/Makefile                       |   1 -
 drivers/soc/st/stm32_hdp.c                    | 246 ------------------
 include/dt-bindings/soc/stm32-hdp.h           | 119 ---------
 include/dt-bindings/soc/stm32mp13-hdp.h       | 133 ----------
 include/dt-bindings/soc/stm32mp25-hdp.h       | 147 -----------
 7 files changed, 693 deletions(-)
 delete mode 100644 Documentation/devicetree/bindings/soc/stm32/stm32_hdp.txt
 delete mode 100644 drivers/soc/st/stm32_hdp.c
 delete mode 100644 include/dt-bindings/soc/stm32-hdp.h
 delete mode 100644 include/dt-bindings/soc/stm32mp13-hdp.h
 delete mode 100644 include/dt-bindings/soc/stm32mp25-hdp.h

--- a/Documentation/devicetree/bindings/soc/stm32/stm32_hdp.txt
+++ /dev/null
@@ -1,39 +0,0 @@
-STM32 - STM32MP1- HDP Pin configuration for STM32MP1
-=======================================================
-
-The Hardware Debug Port (HDP) allows the observation of internal signals. By using multiplexers,
-up to 16 signals for each of 8-bit output can be observed.
-
-Required Properties:
-
-  - compatible: Must be "st,stm32mp1-hdp"
-  - muxing-hdp: Indicates for each HDP pins selected which HDP output among the 16 available signals you want
-
-For each HDP pins you can select one of 16 signals which will be described in file : include/dt-bindings/soc/stm32-hdp.h
-
-Example
--------
-
-In common dtsi file:
-
-hdp: hdp@5002a000 {
-	compatible = "st,stm32mp1-hdp";
-	reg = <0x5002a000 0x400>;
-	clocks = <&rcc HDP>;
-	clock-names = "hdp";
-};
-
-In board-specific file:
-
-In this example I've selected HDP0, HDP6 and HDP7, and for HDP0 the output signal is HDP0_GPOVAL_0,
-for HDP6 is HDP6_GPOVAL_6, and for HDP7 is HDP7_GPOVAL_7.
-
-&hdp {
-	pinctrl-names = "default", "sleep";
-	pinctrl-0 = <&hdp0_pins_a &hdp6_pins_a &hdp7_pins_a>;
-	pinctrl-1 = <&hdp0_pins_sleep_a &hdp6_pins_sleep_a &hdp7_pins_sleep_a>;
-
-	muxing-hdp = <(STM32_HDP(0, HDP0_GPOVAL_0) |
-		       STM32_HDP(6, HDP6_GPOVAL_6) |
-		       STM32_HDP(7, HDP7_GPOVAL_7))>;
-};
--- a/drivers/soc/st/Kconfig
+++ b/drivers/soc/st/Kconfig
@@ -1,13 +1,5 @@
 if ARCH_STM32
 
-config STM32_HDP
-	tristate "STMicroelectronics STM32 Hardware Debug Port (HDP) pin control"
-	depends on MACH_STM32MP157 || MACH_STM32MP13 || MACH_STM32MP25 || ARM64
-	default n
-	help
-	  The Hardware Debug Port allows the observation of internal signals. By using multiplexers,
-	  up to 16 signals for each of 8-bit output can be observed.
-
 config STM32_PM_DOMAINS
 	bool "STM32 PM domains"
 	depends on MACH_STM32MP157
--- a/drivers/soc/st/Makefile
+++ b/drivers/soc/st/Makefile
@@ -1,2 +1 @@
-obj-$(CONFIG_STM32_HDP) += stm32_hdp.o
 obj-$(CONFIG_STM32_PM_DOMAINS) += stm32_pm_domain.o
--- a/drivers/soc/st/stm32_hdp.c
+++ /dev/null
@@ -1,246 +0,0 @@
-// SPDX-License-Identifier: GPL-2.0
-/*
- * Copyright (C) STMicroelectronics 2018-2023 - All Rights Reserved
- * Author: Christophe Roullier <christophe.roullier@foss.st.com>
- * for STMicroelectronics.
- */
-
-#include <linux/clk.h>
-#include <linux/debugfs.h>
-#include <linux/init.h>
-#include <linux/of.h>
-#include <linux/module.h>
-#include <linux/pinctrl/pinconf.h>
-#include <linux/pinctrl/pinconf-generic.h>
-#include <linux/pinctrl/pinctrl.h>
-#include <linux/platform_device.h>
-#include <linux/io.h>
-#include <linux/suspend.h>
-
-#define HDP_CTRL_ENABLE 1
-#define HDP_CTRL_DISABLE 0
-
-enum {
-	HDP_CTRL = 0,
-	HDP_MUX = 0x4,
-	HDP_VAL = 0x10,
-	HDP_GPOSET = 0x14,
-	HDP_GPOCLR = 0x18,
-	HDP_GPOVAL = 0x1c,
-	HDP_VERR = 0x3f4,
-	HDP_IPIDR = 0x3f8,
-	HDP_SIDR = 0x3fc
-} HDP_register_offsets;
-
-struct data_priv {
-	struct clk *clk;
-	int clk_is_enabled;
-	struct dentry *pwr_dentry;
-	unsigned char __iomem *hdp_membase;
-	unsigned int hdp_ctrl;
-	unsigned int hdp_mux;
-};
-
-/* enable/disable */
-static int stm32_hdp_enable_set(void *data, int val)
-{
-	struct data_priv *e = (struct data_priv *)data;
-
-	if (!e->clk)
-		return -EPERM;
-
-	if (val == 1) {
-		if (clk_prepare_enable(e->clk) < 0) {
-			pr_err("Failed to enable HDP clock\n");
-			return -EPERM;
-		}
-		e->clk_is_enabled = 1;
-	} else {
-		clk_disable_unprepare(e->clk);
-		e->clk_is_enabled = 0;
-	}
-	return 0;
-}
-
-static int stm32_hdp_fops_set(void *data, u64 val)
-{
-	unsigned char __iomem *addr = (unsigned char __iomem *)data;
-
-	writel_relaxed(val, addr);
-
-	return 0;
-}
-
-static int stm32_hdp_fops_get(void *data, u64 *val)
-{
-	unsigned char __iomem *addr = (unsigned char __iomem *)data;
-
-	*val = readl_relaxed(addr);
-
-	return 0;
-}
-
-DEFINE_SIMPLE_ATTRIBUTE(stm32_hdp_fops, stm32_hdp_fops_get,
-			stm32_hdp_fops_set, "0x%llx\n");
-
-static int stm32_hdp_probe(struct platform_device *pdev)
-{
-	struct device_node *np = pdev->dev.of_node;
-	struct device *dev = &pdev->dev;
-	struct resource *res;
-
-	struct data_priv *data;
-	struct dentry *r;
-
-	int ret;
-	const __be32 *getmuxing;
-	u32 muxing, version;
-
-	if (!np)
-		return -ENODEV;
-
-	data = devm_kzalloc(&pdev->dev, sizeof(struct data_priv), GFP_KERNEL);
-	if (!data)
-		return -ENOMEM;
-
-	res = platform_get_resource(pdev, IORESOURCE_MEM, 0);
-	data->hdp_membase = devm_ioremap_resource(&pdev->dev, res);
-	if (IS_ERR(data->hdp_membase))
-		return PTR_ERR(data->hdp_membase);
-
-	/*  Get HDP clocks */
-	data->clk = devm_clk_get(dev, "hdp");
-	if (IS_ERR(data->clk)) {
-		dev_err(dev, "No HDP CK clock provided...\n");
-		return PTR_ERR(data->clk);
-	}
-
-	/* Enable clock */
-	ret = stm32_hdp_enable_set(data, 1);
-	if (ret != 0)
-		return ret;
-
-	getmuxing = of_get_property(np, "muxing-hdp", NULL);
-	if (!getmuxing) {
-		dev_err(dev,
-			"no muxing-hdp property in node\n");
-		/* Disable clock */
-		ret = stm32_hdp_enable_set(data, 0);
-		if (ret != 0)
-			return ret;
-
-		return -EINVAL;
-	}
-
-	/* add hdp directory */
-	r = debugfs_create_dir("hdp", NULL);
-	if (!r) {
-		dev_err(dev, "Unable to create HDP debugFS\n");
-		/* Disable clock */
-		ret = stm32_hdp_enable_set(data, 0);
-		if (ret != 0)
-			return ret;
-
-		return -ENODEV;
-	}
-
-	debugfs_create_file("ctrl", 0644, r,
-			    data->hdp_membase + HDP_CTRL, &stm32_hdp_fops);
-	debugfs_create_file("mux", 0644, r,
-			    data->hdp_membase + HDP_MUX, &stm32_hdp_fops);
-	debugfs_create_file("val", 0644, r,
-			    data->hdp_membase + HDP_VAL, &stm32_hdp_fops);
-	debugfs_create_file("gposet", 0644, r,
-			    data->hdp_membase + HDP_GPOSET, &stm32_hdp_fops);
-	debugfs_create_file("gpoclr", 0644, r,
-			    data->hdp_membase + HDP_GPOCLR, &stm32_hdp_fops);
-	debugfs_create_file("gpoval", 0644, r,
-			    data->hdp_membase + HDP_GPOVAL, &stm32_hdp_fops);
-
-	/* Enable HDP */
-	writel(HDP_CTRL_ENABLE, data->hdp_membase + HDP_CTRL);
-
-	/* HDP Multiplexing */
-	muxing = of_read_number(getmuxing,
-				of_n_addr_cells(np));
-
-	writel(muxing, data->hdp_membase + HDP_MUX);
-
-	platform_set_drvdata(pdev, data);
-
-	/* Get Majeur, Minor version */
-	version = readl(data->hdp_membase + HDP_VERR);
-
-	dev_info(dev, "STM32 HDP version %d.%d initialized\n",
-		 version >> 4, version & 0x0F);
-
-	return 0;
-}
-
-static int stm32_hdp_remove(struct platform_device *pdev)
-{
-	struct data_priv *data = platform_get_drvdata(pdev);
-
-	/* Disable HDP */
-	writel(HDP_CTRL_DISABLE, data->hdp_membase + HDP_CTRL);
-
-	if (data->clk) {
-		if (data->clk_is_enabled)
-			clk_disable_unprepare(data->clk);
-	}
-
-	pr_info("driver STM32 HDP removed\n");
-	return 0;
-}
-
-#ifdef CONFIG_PM_SLEEP
-static int stm32_hdp_suspend(struct device *dev)
-{
-	struct data_priv *data = dev_get_drvdata(dev);
-
-	data->hdp_ctrl = readl_relaxed(data->hdp_membase + HDP_CTRL);
-	data->hdp_mux = readl_relaxed(data->hdp_membase + HDP_MUX);
-
-	pinctrl_pm_select_sleep_state(dev);
-
-	return 0;
-}
-
-static int stm32_hdp_resume(struct device *dev)
-{
-	struct data_priv *data = dev_get_drvdata(dev);
-
-	writel_relaxed(data->hdp_ctrl, data->hdp_membase + HDP_CTRL);
-	writel_relaxed(data->hdp_mux, data->hdp_membase + HDP_MUX);
-
-	pinctrl_pm_select_default_state(dev);
-
-	return 0;
-}
-#endif /* CONFIG_PM_SLEEP */
-
-static SIMPLE_DEV_PM_OPS(stm32_hdp_pm_ops,
-			 stm32_hdp_suspend,
-			 stm32_hdp_resume);
-
-static const struct of_device_id hdp_match[] = {
-	{	.compatible = "st,stm32mp1-hdp",},
-	{ }
-};
-MODULE_DEVICE_TABLE(of, hdp_match);
-
-static struct platform_driver hdp_driver = {
-	.probe = stm32_hdp_probe,
-	.remove = stm32_hdp_remove,
-	.driver = {
-		.name = "hdp",
-		.of_match_table = hdp_match,
-		.pm = &stm32_hdp_pm_ops,
-	},
-};
-
-module_platform_driver(hdp_driver);
-
-MODULE_AUTHOR("Christophe Roullier <christophe.roullier@foss.st.com>");
-MODULE_DESCRIPTION("STM32 Hardware Debug Port (HDP) pin control");
-MODULE_LICENSE("GPL");
--- a/include/dt-bindings/soc/stm32-hdp.h
+++ /dev/null
@@ -1,119 +0,0 @@
-/* SPDX-License-Identifier: (GPL-2.0-only OR BSD-3-Clause) */
-/*
- * Copyright (C) STMicroelectronics 2018-2023 - All Rights Reserved
- * Author: Roullier Christophe <christophe.roullier@foss.st.com>
- * for STMicroelectronics.
- */
-
-#ifndef _DT_BINDINGS_STM32_HDP_H
-#define _DT_BINDINGS_STM32_HDP_H
-
-#define STM32_HDP(port, value) ((value) << ((port) * 4))
-
-/* define HDP Pins number */
-#define HDP0_PWR_PWRWAKE_SYS			0
-#define HDP0_CM4_SLEEPDEEP			1
-#define HDP0_PWR_STDBY_WKUP			2
-#define HDP0_PWR_ENCOMP_VDDCORE			3
-#define HDP0_BSEC_OUT_SEC_NIDEN			4
-#define HDP0_RCC_CM4_SLEEPDEEP			6
-#define HDP0_GPU_DBG7				7
-#define HDP0_DDRCTRL_LP_REQ			8
-#define HDP0_PWR_DDR_RET_ENABLE_N		9
-#define HDP0_DTS_CLK_PTAT			10
-#define HDP0_GPOVAL_0				15
-
-#define HDP1_PWR_PWRWAKE_MCU			0
-#define HDP1_CM4_HALTED				1
-#define HDP1_CA7_NAXIERRIRQ			2
-#define HDP1_PWR_OKIN_MR			3
-#define HDP1_BSEC_OUT_SEC_DBGEN			4
-#define HDP1_EXTI_SYS_WAKEUP			5
-#define HDP1_RCC_PWRDS_MPU			6
-#define HDP1_GPU_DBG6				7
-#define HDP1_DDRCTRL_DFI_CTRLUPD_REQ		8
-#define HDP1_DDRCTRL_CACTIVE_DDRC_ASR		9
-#define HDP1_GPOVAL_1				15
-
-#define HDP2_PWR_PWRWAKE_MPU			0
-#define HDP2_CM4_RXEV				1
-#define HDP2_CA7_NPMUIRQ1			2
-#define HDP2_CA7_NFIQOUT1			3
-#define HDP2_BSEC_IN_RSTCORE_N			4
-#define HDP2_EXTI_C2_WAKEUP			5
-#define HDP2_RCC_PWRDS_MCU			6
-#define HDP2_GPU_DBG5				7
-#define HDP2_DDRCTRL_DFI_INIT_COMPLETE		8
-#define HDP2_DDRCTRL_PERF_OP_IS_REFRESH		9
-#define HDP2_DDRCTRL_GSKP_DFI_LP_REQ		10
-#define HDP2_GPOVAL_2				15
-
-#define HDP3_PWR_SEL_VTH_VDDCORE		0
-#define HDP3_CM4_TXEV				1
-#define HDP3_CA7_NPMUIRQ0			2
-#define HDP3_CA7_NFIQOUT0			3
-#define HDP3_BSEC_OUT_SEC_DFTLOCK		4
-#define HDP3_EXTI_C1_WAKEUP			5
-#define HDP3_RCC_PWRDS_SYS			6
-#define HDP3_GPU_DBG4				7
-#define HDP3_DDRCTRL_STAT_DDRC_REG_SELFREF_TYPE0	8
-#define HDP3_DDRCTRL_CACTIVE_1			9
-#define HDP3_DTS_VALOBUS1_0			10
-#define HDP3_DTS_VALOBUS2_0			11
-#define HDP3_GPOVAL_3				15
-
-#define HDP4_PWR_PDDS_NOT_CSTBYDIS		0
-#define HDP4_CM4_SLEEPING			1
-#define HDP4_CA7_NRESET1			2
-#define HDP4_CA7_NIRQOUT1			3
-#define HDP4_BSEC_OUT_SEC_DFTEN			4
-#define HDP4_BSEC_OUT_SEC_DBGSWENABLE		5
-#define HDP4_ETH_OUT_PMT_INTR_O			6
-#define HDP4_GPU_DBG3				7
-#define HDP4_DDRCTRL_STAT_DDRC_REG_SELFREF_TYPE1	8
-#define HDP4_DDRCTRL_CACTIVE_0			9
-#define HDP4_DTS_VALOBUS1_1			10
-#define HDP4_DTS_VALOBUS2_1			11
-#define HDP4_GPOVAL_4				15
-
-#define HDP5_CA7_STANDBYWFIL2			0
-#define HDP5_PWR_VTH_VDDCORE_ACK		1
-#define HDP5_CA7_NRESET0			2
-#define HDP5_CA7_NIRQOUT0			3
-#define HDP5_BSEC_IN_PWROK			4
-#define HDP5_BSEC_OUT_SEC_DEVICEEN		5
-#define HDP5_ETH_OUT_LPI_INTR_O			6
-#define HDP5_GPU_DBG2				7
-#define HDP5_DDRCTRL_CACTIVE_DDRC		8
-#define HDP5_DDRCTRL_WR_CREDIT_CNT		9
-#define HDP5_DTS_VALOBUS1_2			10
-#define HDP5_DTS_VALOBUS2_2			11
-#define HDP5_GPOVAL_5				15
-
-#define HDP6_CA7_STANDBYWFI1			0
-#define HDP6_CA7_STANDBYWFE1			1
-#define HDP6_CA7_EVENTO				2
-#define HDP6_CA7_DBGACK1			3
-#define HDP6_BSEC_OUT_SEC_SPNIDEN		5
-#define HDP6_ETH_OUT_MAC_SPEED_O1		6
-#define HDP6_GPU_DBG1				7
-#define HDP6_DDRCTRL_CSYSACK_DDRC		8
-#define HDP6_DDRCTRL_LPR_CREDIT_CNT		9
-#define HDP6_DTS_VALOBUS1_3			10
-#define HDP6_DTS_VALOBUS2_3			11
-#define HDP6_GPOVAL_6				15
-
-#define HDP7_CA7_STANDBYWFI0			0
-#define HDP7_CA7_STANDBYWFE0			1
-#define HDP7_CA7_DBGACK0			3
-#define HDP7_BSEC_OUT_FUSE_OK			4
-#define HDP7_BSEC_OUT_SEC_SPIDEN		5
-#define HDP7_ETH_OUT_MAC_SPEED_O0		6
-#define HDP7_GPU_DBG0				7
-#define HDP7_DDRCTRL_CSYSREQ_DDRC		8
-#define HDP7_DDRCTRL_HPR_CREDIT_CNT		9
-#define HDP7_DTS_VALOBUS1_4			10
-#define HDP7_DTS_VALOBUS2_4			11
-#define HDP7_GPOVAL_7				15
-
-#endif /* _DT_BINDINGS_STM32_HDP_H */
--- a/include/dt-bindings/soc/stm32mp13-hdp.h
+++ /dev/null
@@ -1,133 +0,0 @@
-/* SPDX-License-Identifier: (GPL-2.0-only OR BSD-3-Clause) */
-/*
- * Copyright (C) STMicroelectronics 2018-2023 - All Rights Reserved
- * Author: Roullier Christophe <christophe.roullier@foss.st.com>
- * for STMicroelectronics.
- */
-
-#ifndef _DT_BINDINGS_STM32_HDP_H
-#define _DT_BINDINGS_STM32_HDP_H
-
-#define STM32_HDP(port, value) ((value) << ((port) * 4))
-
-/* define HDP Pins number */
-#define HDP0_PWR_PWRWAKE_SYS			0
-#define HDP0_PWR_STOP_FORBIDDEN			1
-#define HDP0_PWR_STDBY_WAKEUP			2
-#define HDP0_PWR_ENCOMP_VDDCORE			3
-#define HDP0_BSEC_OUT_SEC_NIDEN			4
-#define HDP0_AIEC_SYS_WAKEUP			5
-#define HDP0_DDRCTRL_LP_REQ			8
-#define HDP0_PWR_DDR_RET_ENABLE_N		9
-#define HDP0_DTS_CLK_PTAT			10
-#define HDP0_SRAM3CTRL_TAMP_ERASE_ACT		12
-#define HDP0_GPOVAL_0				15
-
-#define HDP1_PWR_SEL_VTH_VDDCPU			0
-#define HDP1_PWR_MPU_RAM_LOWSPEED		1
-#define HDP1_CA7_NAXIERRIRQ			2
-#define HDP1_PWR_OKIN_MR			3
-#define HDP1_BSEC_OUT_SEC_DBGEN			4
-#define HDP1_AIEC_C1_WAKEUP			5
-#define HDP1_RCC_PWRDS_MPU			6
-#define HDP1_DDRCTRL_DFI_CTRLUPD_REQ		8
-#define HDP1_DDRCTRL_CACTIVE_DDRC_ASR		9
-#define HDP1_SRAM3CTRL_HW_ERASE_ACT		12
-#define HDP1_NIC400_S0_BREADY			13
-#define HDP1_GPOVAL_1				15
-
-#define HDP2_PWR_PWRWAKE_MPU			0
-#define HDP2_PWR_MPU_CLOCK_DISABLE_ACK		1
-#define HDP2_CA7_NDBGRESET_I			2
-#define HDP2_BSEC_IN_RSTCORE_N			4
-#define HDP2_BSEC_OUT_SEC_BSC_DIS		5
-#define HDP2_DDRCTRL_DFI_INIT_COMPLETE		8
-#define HDP2_DDRCTRL_PERF_OP_IS_REFRESH		9
-#define HDP2_DDRCTRL_GSKP_DFI_LP_REQ		10
-#define HDP2_SRAM3CTRL_SW_ERASE_ACT		12
-#define HDP2_NIC400_S0_BVALID			13
-#define HDP2_GPOVAL_2				15
-
-#define HDP3_PWR_SEL_VTH_VDDCORE		0
-#define HDP3_PWR_MPU_CLOCK_DISABLE_REQ		1
-#define HDP3_CA7_NPMUIRQ0			2
-#define HDP3_CA7_NFIQOUT0			3
-#define HDP3_BSEC_OUT_SEC_DFTLOCK		4
-#define HDP3_BSEC_OUT_SEC_JTAG_DIS		5
-#define HDP3_RCC_PWRDS_SYS			6
-#define HDP3_SRAM3CTRL_TAMP_ERASE_REQ		7
-#define HDP3_DDRCTRL_STAT_DDRC_REG_SELFREF_TYPE0	8
-#define HDP3_DTS_VALOBUS1_0			10
-#define HDP3_DTS_VALOBUS2_0			11
-#define HDP3_TAMP_POTENTIAL_TAMP_ERFCFG		12
-#define HDP3_NIC400_S0_WREADY			13
-#define HDP3_NIC400_S0_RREADY			14
-#define HDP3_GPOVAL_3				15
-
-#define HDP4_PWR_STOP2_ACTIVE			1
-#define HDP4_CA7_NL2RESET_I			2
-#define HDP4_CA7_NPORESET_VARM_I		3
-#define HDP4_BSEC_OUT_SEC_DFTEN			4
-#define HDP4_BSEC_OUT_SEC_DBGSWENABLE		5
-#define HDP4_ETH1_OUT_PMT_INTR_O		6
-#define HDP4_ETH2_OUT_PMT_INTR_O		7
-#define HDP4_DDRCTRL_STAT_DDRC_REG_SELFREF_TYPE1	8
-#define HDP4_DDRCTRL_CACTIVE_0			9
-#define HDP4_DTS_VALOBUS1_1			10
-#define HDP4_DTS_VALOBUS2_1			11
-#define HDP4_TAMP_NRESET_SRAM_ERCFG		12
-#define HDP4_NIC400_S0_WLAST			13
-#define HDP4_NIC400_S0_RLAST			14
-#define HDP4_GPOVAL_4				15
-
-#define HDP5_CA7_STANDBYWFIL2			0
-#define HDP5_PWR_VTH_VDDCORE_ACK		1
-#define HDP5_CA7_NCORERESET_I			2
-#define HDP5_CA7_NIRQOUT0			3
-#define HDP5_BSEC_IN_PWROK			4
-#define HDP5_BSEC_OUT_SEC_DEVICEEN		5
-#define HDP5_ETH1_OUT_LPI_INTR_O		6
-#define HDP5_ETH2_OUT_LPI_INTR_O		7
-#define HDP5_DDRCTRL_CACTIVE_DDRC		8
-#define HDP5_DDRCTRL_WR_CREDIT_CNT		9
-#define HDP5_DTS_VALOBUS1_2			10
-#define HDP5_DTS_VALOBUS2_2			11
-#define HDP5_PKA_PKA_ITAMP_OUT			12
-#define HDP5_NIC400_S0_WVALID			13
-#define HDP5_NIC400_S0_RVALID			14
-#define HDP5_GPOVAL_5				15
-
-#define HDP6_CA7_STANDBYWFE0			0
-#define HDP6_PWR_VTH_VDDCPU_ACK			1
-#define HDP6_CA7_EVENTO				2
-#define HDP6_BSEC_IN_TAMPER_DET			4
-#define HDP6_BSEC_OUT_SEC_SPNIDEN		5
-#define HDP6_ETH1_OUT_MAC_SPEED_O1		6
-#define HDP6_ETH2_OUT_MAC_SPEED_O1		7
-#define HDP6_DDRCTRL_CSYSACK_DDRC		8
-#define HDP6_DDRCTRL_LPR_CREDIT_CNT		9
-#define HDP6_DTS_VALOBUS1_3			10
-#define HDP6_DTS_VALOBUS2_3			11
-#define HDP6_SAES_TAMPER_OUT			12
-#define HDP6_NIC400_S0_AWREADY			13
-#define HDP6_NIC400_S0_ARREADY			14
-#define HDP6_GPOVAL_6				15
-
-#define HDP7_CA7_STANDBYWFI0			0
-#define HDP7_PWR_RCC_VCPU_RDY			1
-#define HDP7_CA7_EVENTI				2
-#define HDP7_CA7_DBGACK0			3
-#define HDP7_BSEC_OUT_FUSE_OK			4
-#define HDP7_BSEC_OUT_SEC_SPIDEN		5
-#define HDP7_ETH1_OUT_MAC_SPEED_O0		6
-#define HDP7_ETH2_OUT_MAC_SPEED_O0		7
-#define HDP7_DDRCTRL_CSYSREQ_DDRC		8
-#define HDP7_DDRCTRL_HPR_CREDIT_CNT		9
-#define HDP7_DTS_VALOBUS1_4			10
-#define HDP7_DTS_VALOBUS2_4			11
-#define HDP7_RNG_TAMPER_OUT			12
-#define HDP7_NIC400_S0_AWAVALID			13
-#define HDP7_NIC400_S0_ARAVALID			14
-#define HDP7_GPOVAL_7				15
-
-#endif /* _DT_BINDINGS_STM32_HDP_H */
--- a/include/dt-bindings/soc/stm32mp25-hdp.h
+++ /dev/null
@@ -1,147 +0,0 @@
-/* SPDX-License-Identifier: (GPL-2.0-only OR BSD-3-Clause) */
-/*
- * Copyright (C) STMicroelectronics 2023 - All Rights Reserved
- * Author: Antonio Borneo <antonio.borneo@foss.st.com>
- * for STMicroelectronics.
- */
-
-#ifndef _DT_BINDINGS_STM32_HDP_H
-#define _DT_BINDINGS_STM32_HDP_H
-
-#define STM32_HDP(port, value) ((value) << ((port) * 4))
-
-/* define HDP Pins number */
-#define HDP0_PWR_PWRWAKE_SYS			0
-#define HDP0_CPU2_SLEEP_DEEP			1
-#define HDP0_BSEC_OUT_TST_SDR_UNLOCK_OR_DISABLE_SCAN	2
-#define HDP0_BSEC_OUT_NIDENM			3
-#define HDP0_BSEC_OUT_NIDENA			4
-#define HDP0_CPU2_STATE_0			5
-#define HDP0_RCC_PWRDS_SYS			6
-#define HDP0_GPU_DBG7				7
-#define HDP0_DDRSS_CSYSREQ_DDRC			8
-#define HDP0_DDRSS_DFI_PHYUPD_REQ		9
-#define HDP0_CPU3_SLEEP_DEEP			10
-#define HDP0_D2_GBL_PER_CLK_BUS_REQ		11
-#define HDP0_PCIE_USB_CXPL_DEBUG_INFO_EI_0	12
-#define HDP0_PCIE_USB_CXPL_DEBUG_INFO_EI_8	13
-#define HDP0_D3_STATE_0				14
-#define HDP0_GPOVAL_0				15
-
-#define HDP1_PWR_PWRWAKE_CPU2			0
-#define HDP1_CPU2_HALTED			1
-#define HDP1_CPU2_STATE_1			2
-#define HDP1_BSEC_OUT_DBGENM			3
-#define HDP1_BSEC_OUT_DBGENA			4
-#define HDP1_EXTI1_SYS_WAKEUP			5
-#define HDP1_RCC_PWRDS_CPU2			6
-#define HDP1_GPU_DBG6				7
-#define HDP1_DDRSS_CSYSACK_DDRC			8
-#define HDP1_DDRSS_DFI_PHYMSTR_REQ		9
-#define HDP1_CPU3_HALTED			10
-#define HDP1_D2_GBL_PER_DMA_REQ			11
-#define HDP1_PCIE_USB_CXPL_DEBUG_INFO_EI_1	12
-#define HDP1_PCIE_USB_CXPL_DEBUG_INFO_EI_9	13
-#define HDP1_D3_STATE_1				14
-#define HDP1_GPOVAL_1				15
-
-#define HDP2_PWR_PWRWAKE_CPU1			0
-#define HDP2_CPU2_RXEV				1
-#define HDP2_CPU1_NPMUIRQ1			2
-#define HDP2_CPU1_NFIQOUT1			3
-#define HDP2_BSEC_OUT_SHDBGEN			4
-#define HDP2_EXTI1_CPU2_WAKEUP			5
-#define HDP2_RCC_PWRDS_CPU1			6
-#define HDP2_GPU_DBG5				7
-#define HDP2_DDRSS_CACTIVE_DDRC			8
-#define HDP2_DDRSS_DFI_LP_REQ			9
-#define HDP2_CPU3_RXEV				10
-#define HDP2_HPDMA1_CLK_BUS_REQ			11
-#define HDP2_PCIE_USB_CXPL_DEBUG_INFO_EI_2	12
-#define HDP2_PCIE_USB_CXPL_DEBUG_INFO_EI_10	13
-#define HDP2_D3_STATE_2				14
-#define HDP2_GPOVAL_2				15
-
-#define HDP3_PWR_SEL_VTH_VDDCPU			0
-#define HDP3_CPU2_TXEV				1
-#define HDP3_CPU1_NPMUIRQ0			2
-#define HDP3_CPU1_NFIQOUT0			3
-#define HDP3_BSEC_OUT_DDBGEN			4
-#define HDP3_EXTI1_CPU1_WAKEUP			5
-#define HDP3_CPU3_STATE_0			6
-#define HDP3_GPU_DBG4				7
-#define HDP3_DDRSS_MCDCG_EN			8
-#define HDP3_DDRSS_DFI_FREQ_0			9
-#define HDP3_CPU3_TXEV				10
-#define HDP3_HPDMA2_CLK_BUS_REQ			11
-#define HDP3_PCIE_USB_CXPL_DEBUG_INFO_EI_3	12
-#define HDP3_PCIE_USB_CXPL_DEBUG_INFO_EI_11	13
-#define HDP3_D1_STATE_0				14
-#define HDP3_GPOVAL_3				15
-
-#define HDP4_PWR_SEL_VTH_VDDCORE		0
-#define HDP4_CPU2_SLEEPING			1
-#define HDP4_CPU1_EVENTO			2
-#define HDP4_CPU1_NIRQOUT1			3
-#define HDP4_BSEC_OUT_SPNIDENA			4
-#define HDP4_EXTI2_D3_WAKEUP			5
-#define HDP4_ETH1_OUT_PMT_INTR_O		6
-#define HDP4_GPU_DBG3				7
-#define HDP4_DDRSS_DPHYCG_EN			8
-#define HDP4_DDRSS_OBSP0			9
-#define HDP4_CPU3_SLEEPING			10
-#define HDP4_HPDMA3_CLK_BUS_REQ			11
-#define HDP4_PCIE_USB_CXPL_DEBUG_INFO_EI_4	12
-#define HDP4_PCIE_USB_CXPL_DEBUG_INFO_EI_12	13
-#define HDP4_D1_STATE_1				14
-#define HDP4_GPOVAL_4				15
-
-#define HDP5_CPU1_STANDBY_WFIL2			0
-#define HDP5_CPU1_NIRQOUT0			3
-#define HDP5_BSEC_OUT_SPIDENA			4
-#define HDP5_EXTI2_CPU3_WAKEUP			5
-#define HDP5_ETH1_OUT_LPI_INTR_O		6
-#define HDP5_GPU_DBG2				7
-#define HDP5_DDRCTRL_DFI_INIT_START		8
-#define HDP5_DDRSS_OBSP1			9
-#define HDP5_CPU3_STATE_1			10
-#define HDP5_D3_GBL_PER_CLK_BUS_REQ		11
-#define HDP5_PCIE_USB_CXPL_DEBUG_INFO_EI_5	12
-#define HDP5_PCIE_USB_CXPL_DEBUG_INFO_EI_13	13
-#define HDP5_D1_STATE_2				14
-#define HDP5_GPOVAL_5				15
-
-#define HDP6_CPU1_STANDBY_WFI1			0
-#define HDP6_CPU1_STANDBY_WFE1			1
-#define HDP6_CPU1_HALTED1			2
-#define HDP6_CPU1_NAXIERRIRQ			3
-#define HDP6_BSEC_OUT_SPNIDENM			4
-#define HDP6_EXTI2_CPU2_WAKEUP			5
-#define HDP6_ETH2_OUT_PMT_INTR_O		6
-#define HDP6_GPU_DBG1				7
-#define HDP6_DDRSS_DFI_INIT_COMPLETE		8
-#define HDP6_DDRSS_OBSP2			9
-#define HDP6_D2_STATE_0				10
-#define HDP6_D3_GBL_PER_DMA_REQ			11
-#define HDP6_PCIE_USB_CXPL_DEBUG_INFO_EI_6	12
-#define HDP6_PCIE_USB_CXPL_DEBUG_INFO_EI_14	13
-#define HDP6_CPU1_STATE_0			14
-#define HDP6_GPOVAL_6				15
-
-#define HDP7_CPU1_STANDBY_WFI0			0
-#define HDP7_CPU1_STANDBY_WFE0			1
-#define HDP7_CPU1_HALTED0			2
-#define HDP7_BSEC_OUT_SPIDENM			4
-#define HDP7_EXTI2_CPU1__WAKEUP			5
-#define HDP7_ETH2_OUT_LPI_INTR_O		6
-#define HDP7_GPU_DBG0				7
-#define HDP7_DDRSS_DFI_CTRLUPD_REQ		8
-#define HDP7_DDRSS_OBSP3			9
-#define HDP7_D2_STATE_1				10
-#define HDP7_LPDMA1_CLK_BUS_REQ			11
-#define HDP7_PCIE_USB_CXPL_DEBUG_INFO_EI_7	12
-#define HDP7_PCIE_USB_CXPL_DEBUG_INFO_EI_15	13
-#define HDP7_CPU1_STATE_1			14
-#define HDP7_GPOVAL_7				15
-
-#endif /* _DT_BINDINGS_STM32_HDP_H */
