From c245235d26fc3523b23742049eff0f645b4c6f44 Mon Sep 17 00:00:00 2001
From: Alain Volmat <alain.volmat@foss.st.com>
Date: Fri, 5 Aug 2022 14:49:10 +0200
Subject: [PATCH 0294/1141] media: stm32: dcmipp: byteproc: allow 10/12/14 bits
 Bayer formats

Add entries in order to accept 10/12/14 bits bayer formats.

Change-Id: I31a06a48928fc79dbfddbeebf2e25cbf3bd31978
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/262330
Reviewed-by: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: Hugues FRUCHET <hugues.fruchet@st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
---
 .../st/stm32/stm32-dcmipp/dcmipp-byteproc.c   | 32 +++++++++++++++++--
 1 file changed, 29 insertions(+), 3 deletions(-)

--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
@@ -80,6 +80,18 @@ static const struct dcmipp_byteproc_pix_
 	PIXMAP_MBUS_BPP(SGBRG8_1X8, 1, MIPI_CSI2_DT_RAW8),
 	PIXMAP_MBUS_BPP(SGRBG8_1X8, 1, MIPI_CSI2_DT_RAW8),
 	PIXMAP_MBUS_BPP(SRGGB8_1X8, 1, MIPI_CSI2_DT_RAW8),
+	PIXMAP_MBUS_BPP(SBGGR10_1X10, 1, MIPI_CSI2_DT_RAW10),
+	PIXMAP_MBUS_BPP(SGBRG10_1X10, 1, MIPI_CSI2_DT_RAW10),
+	PIXMAP_MBUS_BPP(SGRBG10_1X10, 1, MIPI_CSI2_DT_RAW10),
+	PIXMAP_MBUS_BPP(SRGGB10_1X10, 1, MIPI_CSI2_DT_RAW10),
+	PIXMAP_MBUS_BPP(SBGGR12_1X12, 1, MIPI_CSI2_DT_RAW12),
+	PIXMAP_MBUS_BPP(SGBRG12_1X12, 1, MIPI_CSI2_DT_RAW12),
+	PIXMAP_MBUS_BPP(SGRBG12_1X12, 1, MIPI_CSI2_DT_RAW12),
+	PIXMAP_MBUS_BPP(SRGGB12_1X12, 1, MIPI_CSI2_DT_RAW12),
+	PIXMAP_MBUS_BPP(SBGGR14_1X14, 1, MIPI_CSI2_DT_RAW14),
+	PIXMAP_MBUS_BPP(SGBRG14_1X14, 1, MIPI_CSI2_DT_RAW14),
+	PIXMAP_MBUS_BPP(SGRBG14_1X14, 1, MIPI_CSI2_DT_RAW14),
+	PIXMAP_MBUS_BPP(SRGGB14_1X14, 1, MIPI_CSI2_DT_RAW14),
 	PIXMAP_MBUS_BPP(JPEG_1X8, 1, 0x00), /* TODO - DT value to be fixed */
 };
 
@@ -173,9 +185,23 @@ static void dcmipp_byteproc_adjust_compo
 	r->left = 0;
 
 	/* Compose is not possible for JPEG or Bayer formats */
-	if (fmt->code == MEDIA_BUS_FMT_JPEG_1X8 ||
-	    fmt->code == MEDIA_BUS_FMT_SBGGR8_1X8 || fmt->code == MEDIA_BUS_FMT_SGBRG8_1X8 ||
-	    fmt->code == MEDIA_BUS_FMT_SGRBG8_1X8 || fmt->code == MEDIA_BUS_FMT_SRGGB8_1X8) {
+	if ((fmt->code == MEDIA_BUS_FMT_JPEG_1X8) ||
+	    (fmt->code == MEDIA_BUS_FMT_SBGGR8_1X8) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGBRG8_1X8) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGRBG8_1X8) ||
+	    (fmt->code == MEDIA_BUS_FMT_SRGGB8_1X8) ||
+	    (fmt->code == MEDIA_BUS_FMT_SBGGR10_1X10) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGBRG10_1X10) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGRBG10_1X10) ||
+	    (fmt->code == MEDIA_BUS_FMT_SRGGB10_1X10) ||
+	    (fmt->code == MEDIA_BUS_FMT_SBGGR12_1X12) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGBRG12_1X12) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGRBG12_1X12) ||
+	    (fmt->code == MEDIA_BUS_FMT_SRGGB12_1X12) ||
+	    (fmt->code == MEDIA_BUS_FMT_SBGGR14_1X14) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGBRG14_1X14) ||
+	    (fmt->code == MEDIA_BUS_FMT_SGRBG14_1X14) ||
+	    (fmt->code == MEDIA_BUS_FMT_SRGGB14_1X14)) {
 		r->width = fmt->width;
 		r->height = fmt->height;
 		return;
