From 0e4aa60bf7393a9850d3e6c16d7d2178a2bb0813 Mon Sep 17 00:00:00 2001
From: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Date: Tue, 20 Sep 2022 10:56:55 +0200
Subject: [PATCH 0188/1141] iio: trigger: stm32-lptimer: add support for
 stm32mp25

Add support for STM32MP25 SoC. Use newly introduced compatible to handle
this new HW variant. Add new trigger definitions that can be used by the
stm32 analog-to-digital converter. Use compatible data to identify them.

Signed-off-by: Fabrice Gasnier <fabrice.gasnier@foss.st.com>
Change-Id: I39571847b3a3530677ff179c77e9481206053bcb
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/270299
Reviewed-by: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Olivier MOYSAN <olivier.moysan@foss.st.com>
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
---
 drivers/iio/trigger/stm32-lptimer-trigger.c   | 15 ++++++++++++---
 include/linux/iio/timer/stm32-lptim-trigger.h |  9 +++++++++
 2 files changed, 21 insertions(+), 3 deletions(-)

--- a/drivers/iio/trigger/stm32-lptimer-trigger.c
+++ b/drivers/iio/trigger/stm32-lptimer-trigger.c
@@ -16,11 +16,16 @@
 #include <linux/platform_device.h>
 #include <linux/property.h>
 
+#define STM32_LPTIM_TRIGGERS		3
+#define STM32MP25_LPTIM_TRIGGERS	5
+
 /* List Low-Power Timer triggers */
 static const char * const stm32_lptim_triggers[] = {
 	LPTIM1_OUT,
 	LPTIM2_OUT,
-	LPTIM3_OUT,
+	LPTIM3_OUT,		/* STM32_LPTIM_TRIGGERS */
+	LPTIM4_OUT,
+	LPTIM5_OUT,		/* STM32MP25_LPTIM_TRIGGERS */
 };
 
 struct stm32_lptim_trigger {
@@ -73,6 +78,7 @@ static int stm32_lptim_trigger_probe(str
 {
 	struct stm32_lptim_trigger *priv;
 	u32 index;
+	unsigned int num_triggers;
 	int ret;
 
 	priv = devm_kzalloc(&pdev->dev, sizeof(*priv), GFP_KERNEL);
@@ -82,7 +88,9 @@ static int stm32_lptim_trigger_probe(str
 	if (device_property_read_u32(&pdev->dev, "reg", &index))
 		return -EINVAL;
 
-	if (index >= ARRAY_SIZE(stm32_lptim_triggers))
+	num_triggers = (uintptr_t)device_get_match_data(&pdev->dev);
+
+	if (index >= ARRAY_SIZE(stm32_lptim_triggers) || index >= num_triggers)
 		return -EINVAL;
 
 	priv->dev = &pdev->dev;
@@ -98,7 +106,8 @@ static int stm32_lptim_trigger_probe(str
 }
 
 static const struct of_device_id stm32_lptim_trig_of_match[] = {
-	{ .compatible = "st,stm32-lptimer-trigger", },
+	{ .compatible = "st,stm32-lptimer-trigger", .data = (void *)STM32_LPTIM_TRIGGERS},
+	{ .compatible = "st,stm32mp25-lptimer-trigger", .data = (void *)STM32MP25_LPTIM_TRIGGERS},
 	{},
 };
 MODULE_DEVICE_TABLE(of, stm32_lptim_trig_of_match);
--- a/include/linux/iio/timer/stm32-lptim-trigger.h
+++ b/include/linux/iio/timer/stm32-lptim-trigger.h
@@ -14,6 +14,15 @@
 #define LPTIM1_OUT	"lptim1_out"
 #define LPTIM2_OUT	"lptim2_out"
 #define LPTIM3_OUT	"lptim3_out"
+#define LPTIM4_OUT	"lptim4_out"
+#define LPTIM5_OUT	"lptim5_out"
+
+#define LPTIM1_CH1	"lptim1_ch1"
+#define LPTIM1_CH2	"lptim1_ch2"
+#define LPTIM2_CH1	"lptim2_ch1"
+#define LPTIM2_CH2	"lptim2_ch2"
+#define LPTIM3_CH1	"lptim3_ch1"
+#define LPTIM4_CH1	"lptim4_ch1"
 
 #if IS_REACHABLE(CONFIG_IIO_STM32_LPTIMER_TRIGGER)
 bool is_stm32_lptim_trigger(struct iio_trigger *trig);
