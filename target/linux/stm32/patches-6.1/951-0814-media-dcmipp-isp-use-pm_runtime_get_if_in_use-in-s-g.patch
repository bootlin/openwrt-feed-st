From 1b9d4fa006604cba01aeb2978f2ff9b580b8b580 Mon Sep 17 00:00:00 2001
From: Alain Volmat <alain.volmat@foss.st.com>
Date: Mon, 4 Dec 2023 15:52:50 +0100
Subject: [PATCH 0814/1141] media: dcmipp: isp: use pm_runtime_get_if_in_use in
 s/g_ctrl

Ensure that the registers can be accessed by using pm_runtime
around registers accesses in s/g_ctrl

Change-Id: I1915c492ee72e409b9b757b7bfe1ed0df40bd444
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/344623
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 .../media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c  | 10 ++++++++--
 1 file changed, 8 insertions(+), 2 deletions(-)

--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
@@ -13,6 +13,7 @@
 #include <linux/module.h>
 #include <linux/mod_devicetable.h>
 #include <linux/platform_device.h>
+#include <linux/pm_runtime.h>
 #include <linux/vmalloc.h>
 #include <linux/v4l2-mediabus.h>
 #include <media/mipi-csi2.h>
@@ -241,6 +242,7 @@ struct dcmipp_isp_device {
 	struct dcmipp_ent_device ved;
 	struct v4l2_subdev sd;
 	struct device *dev;
+	struct device *cdev;
 	struct v4l2_mbus_framefmt sink_fmt;
 	struct v4l2_mbus_framefmt src_fmt;
 	unsigned int decimation;
@@ -294,7 +296,7 @@ static int dcmipp_isp_s_ctrl(struct v4l2
 
 	dev_dbg(isp->dev, ">> %s: ctrl->id = 0x%x\n", __func__, ctrl->id);
 
-	if (!isp->streaming)
+	if (pm_runtime_get_if_in_use(isp->cdev) == 0)
 		return 0;
 
 	spin_lock_irq(&isp->irqlock);
@@ -343,6 +345,7 @@ static int dcmipp_isp_s_ctrl(struct v4l2
 	}
 
 	spin_unlock_irq(&isp->irqlock);
+	pm_runtime_put(isp->cdev);
 
 	return 0;
 };
@@ -353,7 +356,7 @@ static int dcmipp_isp_g_ctrl(struct v4l2
 			container_of(ctrl->handler, struct dcmipp_isp_device, ctrls);
 	int ret = 0;
 
-	if (!isp->streaming)
+	if (pm_runtime_get_if_in_use(isp->cdev) == 0)
 		return 0;
 
 	switch (ctrl->id) {
@@ -363,6 +366,8 @@ static int dcmipp_isp_g_ctrl(struct v4l2
 		break;
 	}
 
+	pm_runtime_put(isp->cdev);
+
 	return ret;
 };
 
@@ -1099,6 +1104,7 @@ static int dcmipp_isp_comp_bind(struct d
 
 	isp->regs = bind_data->regs;
 	isp->dev = comp;
+	isp->cdev = master;
 
 	/* Initialize the lock */
 	mutex_init(&isp->lock);
