From d73892c6843cf9e639a4ec9783c2f1aad29b06f4 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Fri, 30 Jun 2023 10:37:04 +0200
Subject: [PATCH 0409/1141] drm/panel: rm68200: Add ability to override default
 timing

This patch adds the ability to override the typical display timings.
Default settings applie if no speficic timings have be found in
device-tree.

Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
Change-Id: Ib67d48a142e3817bc3cfb9f1b3607c1ed4f692e2
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/315741
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/gpu/drm/panel/panel-raydium-rm68200.c | 50 ++++++++++++++++---
 1 file changed, 43 insertions(+), 7 deletions(-)

--- a/drivers/gpu/drm/panel/panel-raydium-rm68200.c
+++ b/drivers/gpu/drm/panel/panel-raydium-rm68200.c
@@ -11,6 +11,7 @@
 #include <linux/mod_devicetable.h>
 #include <linux/module.h>
 #include <linux/pm_runtime.h>
+#include <linux/of.h>
 #include <linux/regulator/consumer.h>
 
 #include <video/mipi_display.h>
@@ -97,6 +98,21 @@ static const struct drm_display_mode def
 	.height_mm = 122,
 };
 
+static const struct drm_display_mode rotate_mode = {
+	.clock = 54000,
+	.hdisplay = 1280,
+	.hsync_start = 1280 + 12,
+	.hsync_end = 1280 + 12 + 5,
+	.htotal = 1280 + 12 + 5 + 12,
+	.vdisplay = 720,
+	.vsync_start = 720 + 48,
+	.vsync_end = 720 + 48 + 9,
+	.vtotal = 720 + 48 + 9 + 48,
+	.flags = DRM_MODE_FLAG_NHSYNC | DRM_MODE_FLAG_NVSYNC,
+	.width_mm = 122,
+	.height_mm = 68,
+};
+
 static inline struct rm68200 *panel_to_rm68200(struct drm_panel *panel)
 {
 	return container_of(panel, struct rm68200, panel);
@@ -321,13 +337,33 @@ static int rm68200_get_modes(struct drm_
 			     struct drm_connector *connector)
 {
 	struct drm_display_mode *mode;
+	struct rm68200 *ctx = panel_to_rm68200(panel);
+	struct device *dev = ctx->dev;
+	int rotation, ret;
+
 
-	mode = drm_mode_duplicate(connector->dev, &default_mode);
-	if (!mode) {
-		dev_err(panel->dev, "failed to add mode %ux%u@%u\n",
-			default_mode.hdisplay, default_mode.vdisplay,
-			drm_mode_vrefresh(&default_mode));
-		return -ENOMEM;
+	ret = of_property_read_u32(dev->of_node, "rotation", &rotation);
+	if (ret == -EINVAL)
+		rotation = 0;
+
+	if (rotation == 90 || rotation == 270) {
+		mode = drm_mode_duplicate(connector->dev, &rotate_mode);
+
+		if (!mode) {
+			dev_err(panel->dev, "failed to add mode %ux%u@%u\n",
+				rotate_mode.hdisplay, rotate_mode.vdisplay,
+				drm_mode_vrefresh(&rotate_mode));
+			return -ENOMEM;
+		}
+	} else {
+		mode = drm_mode_duplicate(connector->dev, &default_mode);
+
+		if (!mode) {
+			dev_err(panel->dev, "failed to add mode %ux%u@%u\n",
+				default_mode.hdisplay, default_mode.vdisplay,
+				drm_mode_vrefresh(&default_mode));
+			return -ENOMEM;
+		}
 	}
 
 	drm_mode_set_name(mode);
