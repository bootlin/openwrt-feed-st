From 071dfbdf3bf19fecfe3863c7a4a07b158e1fdeb4 Mon Sep 17 00:00:00 2001
From: Cheick TRAORE <cheick.traore-ext@st.com>
Date: Fri, 29 Mar 2024 16:31:45 +0100
Subject: [PATCH 1008/1141] pinctrl: stmfx: Manage irq affinity settings

Trying to set the affinity of the interrupt associated to stmfx
pinctrl results in a write error because stmfx pinctrl was not
managing the set of the irq smp affinity. It is resolved by
adding the .irq_set_affinity to the stmfx pinctrl irq_chip struct and
fill it with a function to manage affinity. The function return an
error explaining to set the affinity of the gpio interrupt
provider to change stmfx pinctrl smp_affinity.

Change-Id: Icbec61a46d246cfa87e759c4e34acc2d45508768
Signed-off-by: Cheick TRAORE <cheick.traore-ext@st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/368509
Reviewed-by: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
Domain-Review: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/pinctrl/pinctrl-stmfx.c | 20 ++++++++++++++++++++
 1 file changed, 20 insertions(+)

--- a/drivers/pinctrl/pinctrl-stmfx.c
+++ b/drivers/pinctrl/pinctrl-stmfx.c
@@ -6,6 +6,7 @@
  * Author(s): Amelie Delaunay <amelie.delaunay@st.com>.
  */
 #include <linux/gpio/driver.h>
+#include <linux/i2c.h>
 #include <linux/interrupt.h>
 #include <linux/mfd/stmfx.h>
 #include <linux/module.h>
@@ -615,6 +616,23 @@ static int stmfx_pinctrl_gpio_function_e
 	return stmfx_function_enable(pctl->stmfx, func);
 }
 
+static int stmfx_pinctrl_irq_set_affinity(struct irq_data *d, const struct cpumask *dest,
+					  bool force)
+{
+	struct gpio_chip *gpio_chip = irq_data_get_irq_chip_data(d);
+	struct stmfx_pinctrl *pctl = gpiochip_get_data(gpio_chip);
+	struct i2c_client *client = to_i2c_client(pctl->stmfx->dev);
+	static DEFINE_RATELIMIT_STATE(rs, DEFAULT_RATELIMIT_INTERVAL * 10, 1);
+
+	if (__ratelimit(&rs))
+		dev_notice(pctl->dev,
+			   "Can't set the affinity, set it for irq %d instead\n", client->irq);
+	if (force)
+		return -EINVAL;
+
+	return 0;
+}
+
 static int stmfx_pinctrl_probe(struct platform_device *pdev)
 {
 	struct stmfx *stmfx = dev_get_drvdata(pdev->dev.parent);
@@ -696,6 +714,8 @@ static int stmfx_pinctrl_probe(struct pl
 	pctl->irq_chip.irq_request_resources = stmfx_gpio_irq_request_resources;
 	pctl->irq_chip.irq_release_resources = stmfx_gpio_irq_release_resources;
 	pctl->irq_chip.flags = IRQCHIP_IMMUTABLE;
+	pctl->irq_chip.irq_set_affinity = IS_ENABLED(CONFIG_SMP) ? stmfx_pinctrl_irq_set_affinity :
+								   NULL;
 
 	girq = &pctl->gpio_chip.irq;
 	gpio_irq_chip_set_chip(girq, &pctl->irq_chip);
