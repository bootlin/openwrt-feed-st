From 13e6ef149107634388133481200c6c1330c3bc18 Mon Sep 17 00:00:00 2001
From: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date: Thu, 1 Feb 2024 15:19:36 +0100
Subject: [PATCH 0991/1141] dt-bindings: dma: stm32-dma3: prevent linked-list
 refactoring

stm32-dma3 driver refactors the linked-list in order to address the memory
with the highest possible data width.
It means that it can introduce up to 2 linked-list items. One with a
transfer length multiple of channel maximum burst length and so with the
highest possible data width. And an extra one with the latest bytes, with
lower data width.
Some devices (e.g. FMC ECC) don't support having several transfers instead
of only one.
So add the possibility to prevent linked-list refactoring, by setting bit
17 of the 'DMA transfer requirements' bit mask.

Change-Id: Iae22f4e5106de0b3a0b539345f532b36eeeabf28
Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/358984
Reviewed-by: Antonio Maria BORNEO <antonio.borneo@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Domain-Review: Fabrice GASNIER <fabrice.gasnier@foss.st.com>
---
 Documentation/devicetree/bindings/dma/stm32/st,stm32-dma3.yaml | 3 +++
 1 file changed, 3 insertions(+)

--- a/Documentation/devicetree/bindings/dma/stm32/st,stm32-dma3.yaml
+++ b/Documentation/devicetree/bindings/dma/stm32/st,stm32-dma3.yaml
@@ -61,6 +61,9 @@ description: |
       -bit 16: Prevent packing/unpacking mode
         0x0: pack/unpack enabled when source data width/burst != destination data width/burst
         0x1: memory data width/burst forced to peripheral data width/burst to prevent pack/unpack
+      -bit 17: Prevent linked-list refactoring
+        0x0: don't prevent driver to refactor the linked-list for optimal performance
+        0x1: prevent driver to refactor the linked-list, despite not optimal performance
 
 maintainers:
   - Amelie Delaunay <amelie.delaunay@foss.st.com>
