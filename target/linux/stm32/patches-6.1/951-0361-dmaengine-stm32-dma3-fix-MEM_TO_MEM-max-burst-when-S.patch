From 3832ba5eb4f2a1836e39a462f36fe63578155252 Mon Sep 17 00:00:00 2001
From: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date: Tue, 4 Jul 2023 17:38:50 +0200
Subject: [PATCH 0361/1141] dmaengine: stm32-dma3: fix MEM_TO_MEM max burst
 when STM32_DMA3_CFG_SET_DMA

STM32_DMA3_CFG_SET_DMA is set when the user called dmaengine_slave_config
to configure the DMA channel.
If the data width configured by the user is lower than the maximum
possible one, then the maximum burst must be updated, otherwise it won't
reflect the maximum possible burst.

Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
Change-Id: I258650eebfe26f7145529d16b2d6c81df723ac31
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/316338
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/dma/stm32-dma3.c | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/drivers/dma/stm32-dma3.c b/drivers/dma/stm32-dma3.c
index 3264e4c3ccde..71eac66fb77f 100644
--- a/drivers/dma/stm32-dma3.c
+++ b/drivers/dma/stm32-dma3.c
@@ -1036,6 +1036,8 @@ static int stm32_dma3_chan_prep_hw(struct stm32_dma3_chan *chan, enum dma_transf
 		sbl_max = stm32_dma3_get_max_burst(len, sdw, chan->max_burst, src_max_burst);
 		if (chan->config_set & STM32_DMA3_CFG_SET_DMA) {
 			sdw = min_t(u32, init_dw, sdw);
+			sbl_max = stm32_dma3_get_max_burst(len, sdw, chan->max_burst,
+							   src_max_burst);
 			sbl_max = min_t(u32, init_bl_max, sbl_max);
 		}
 
@@ -1046,6 +1048,8 @@ static int stm32_dma3_chan_prep_hw(struct stm32_dma3_chan *chan, enum dma_transf
 		dbl_max = stm32_dma3_get_max_burst(len, ddw, chan->max_burst, dst_max_burst);
 		if (chan->config_set & STM32_DMA3_CFG_SET_DMA) {
 			ddw = min_t(u32, init_dw, ddw);
+			dbl_max = stm32_dma3_get_max_burst(len, ddw, chan->max_burst,
+							   dst_max_burst);
 			dbl_max = min_t(u32, init_bl_max, dbl_max);
 		}
 
-- 
2.39.2

