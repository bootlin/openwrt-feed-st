From 00c2aeeedb962a8acdea4f7a09d7699cf063cc42 Mon Sep 17 00:00:00 2001
From: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date: Thu, 2 Feb 2023 11:18:08 +0100
Subject: [PATCH 0234/1141] dt-bindings: mailbox: update st,stm32-ipcc to
 support callabck context

Add description and example to explain how a client can get mailbox
channel, and be then called under normal or interrupt context.

Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Change-Id: I6c58180c9d2757609a880be66d5b8e736856fb38
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/288694
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Tested-by: Arnaud POULIQUEN <arnaud.pouliquen@st.com>
Reviewed-by: Arnaud POULIQUEN <arnaud.pouliquen@st.com>
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Domain-Review: Arnaud POULIQUEN <arnaud.pouliquen@st.com>
---
 .../bindings/mailbox/st,stm32-ipcc.yaml         | 17 ++++++++++++++++-
 1 file changed, 16 insertions(+), 1 deletion(-)

diff --git a/Documentation/devicetree/bindings/mailbox/st,stm32-ipcc.yaml b/Documentation/devicetree/bindings/mailbox/st,stm32-ipcc.yaml
index 2c8b47285aa3..2ea07e8f8d77 100644
--- a/Documentation/devicetree/bindings/mailbox/st,stm32-ipcc.yaml
+++ b/Documentation/devicetree/bindings/mailbox/st,stm32-ipcc.yaml
@@ -11,6 +11,8 @@ description:
   retrieve messages in an atomic way between two processors.
   It provides the signaling for N bidirectionnal channels. The number of
   channels (N) can be read from a dedicated register.
+  Depending on the DT channel parameter, the client can choice between be called under interrupt
+  normal or context.
 
 maintainers:
   - Fabien Dessenne <fabien.dessenne@foss.st.com>
@@ -59,6 +61,7 @@ additionalProperties: false
 
 examples:
   - |
+
     #include <dt-bindings/interrupt-controller/arm-gic.h>
     #include <dt-bindings/clock/stm32mp1-clks.h>
     ipcc: mailbox@4c001000 {
@@ -73,4 +76,16 @@ examples:
       wakeup-source;
     };
 
-...
+    /*The client 1 uses the mailbox channel 0 and 1 in normal context */
+    mbox_clt1 {
+      mboxes = <&ipcc 0x0>, <&ipcc 1>;
+    };
+
+    /*
+     * The Client 2 uses mailbox channel 2 and 3 in interrupt context
+     * (add 0x100 to the channel value).
+     */
+
+    mbox_clt2 {
+      mboxes = <&ipcc 0x102>, <&ipcc 103>;
+    };
-- 
2.39.2

