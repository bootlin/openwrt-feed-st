From e3e4938d0fc9cb66e90d1fa0a6b1504f1ba3efe4 Mon Sep 17 00:00:00 2001
From: Alain Volmat <alain.volmat@foss.st.com>
Date: Wed, 15 Nov 2023 12:34:12 +0100
Subject: [PATCH 0619/1141] media: stm32: dcmipp: move INSEL selection to
 s_stream

Perform the input selection at s_stream time to fix issues upon
suspend / resume.
Current implementation of the MP25 DCMIPP doesn't allow to have a
clean unique place to set the input selection.  This code will be
reworked upon rebase on top of the MP13 DCMIPP code.

Change-Id: Iba033a5fb8de3fbe248eb6d6b62ce7d2c71615d6
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/339999
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: Hugues FRUCHET <hugues.fruchet@st.com>
Domain-Review: Yannick FERTRE <yannick.fertre@foss.st.com>
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
Reviewed-by: Yannick FERTRE <yannick.fertre@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 .../st/stm32/stm32-dcmipp/dcmipp-byteproc.c         | 13 +++++++++++++
 .../platform/st/stm32/stm32-dcmipp/dcmipp-core.c    |  9 +--------
 .../platform/st/stm32/stm32-dcmipp/dcmipp-isp.c     | 13 +++++++++++++
 .../st/stm32/stm32-dcmipp/dcmipp-parallel.c         |  5 +++++
 .../st/stm32/stm32-dcmipp/dcmipp-pixelproc.c        | 13 +++++++++++++
 5 files changed, 45 insertions(+), 8 deletions(-)

diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
index 1bca28f1782f..07173fbc5674 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
@@ -26,6 +26,9 @@
 #define DCMIPP_FMT_WIDTH_DEFAULT  640
 #define DCMIPP_FMT_HEIGHT_DEFAULT 480
 
+#define DCMIPP_CMCR (0x204)
+#define DCMIPP_CMCR_INSEL BIT(0)
+
 #define DCMIPP_P0FSCR (0x404)
 #define DCMIPP_P0FSCR_DTMODE_MASK GENMASK(17, 16)
 #define DCMIPP_P0FSCR_DTMODE_SHIFT 16
@@ -704,6 +707,16 @@ static int dcmipp_byteproc_s_stream(struct v4l2_subdev *sd, int enable)
 		dcmipp_byteproc_configure_framerate(byteproc);
 
 		ret = dcmipp_byteproc_configure_scale_crop(byteproc);
+
+		/*
+		 * In case of the subdev is the last one before the csi bridge
+		 * the ent.bus.bus_type will be set to V4L2_MBUS_CSI2_DPHY,
+		 * in which case we need to enable the CSI input of the DCMIPP
+		 * TODO: to will have to reworked to avoid duplication between
+		 * subdeves
+		 */
+		if (byteproc->ved.bus_type == V4L2_MBUS_CSI2_DPHY)
+			reg_write(byteproc, DCMIPP_CMCR, DCMIPP_CMCR_INSEL);
 	}
 	mutex_unlock(&byteproc->lock);
 
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
index 7150c7533646..70de96a2bb21 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
@@ -36,8 +36,6 @@
 }
 
 #define DCMIPP_CMHWCFGR (0x200)
-#define DCMIPP_CMCR (0x204)
-#define DCMIPP_CMCR_INSEL BIT(0)
 #define DCMIPP_CMSR2 (0x3F8)
 #define DCMIPP_P0HWCFGR (0x400)
 #define DCMIPP_VERR (0xFF4)
@@ -530,9 +528,6 @@ static int dcmipp_graph_notify_bound(struct v4l2_async_notifier *notifier,
 			}
 		}
 
-		/* Use the parallel interface */
-		reg_write(dcmipp, DCMIPP_CMCR, 0);
-
 		return 0;
 	}
 
@@ -551,6 +546,7 @@ static int dcmipp_graph_notify_bound(struct v4l2_async_notifier *notifier,
 
 		for (i = 0; i < ARRAY_SIZE(sink_ids); i++) {
 			sink = platform_get_drvdata(dcmipp->subdevs[sink_ids[i]]);
+			sink->bus_type = V4L2_MBUS_CSI2_DPHY;
 			ret = media_create_pad_link(&subdev->entity, src_pad + endpoint.port,
 						    sink->ent, 0,
 						    flags);
@@ -574,9 +570,6 @@ static int dcmipp_graph_notify_bound(struct v4l2_async_notifier *notifier,
 		flags = 0;
 	}
 
-	/* Use the CSI interface */
-	reg_write(dcmipp, DCMIPP_CMCR, DCMIPP_CMCR_INSEL);
-
 	return ret;
 }
 
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
index 7b77ce58051e..39ebdd3fff7d 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
@@ -30,6 +30,9 @@
 
 #define DCMIPP_CMSR2_P1VSYNCF BIT(18)
 
+#define DCMIPP_CMCR (0x204)
+#define DCMIPP_CMCR_INSEL BIT(0)
+
 #define DCMIPP_P1FSCR (0x804)
 #define DCMIPP_P1FSCR_DTIDA_MASK GENMASK(5, 0)
 #define DCMIPP_P1FSCR_DTIDA_SHIFT 0
@@ -952,6 +955,16 @@ static int dcmipp_isp_s_stream(struct v4l2_subdev *sd, int enable)
 		ret = dcmipp_isp_colorconv_auto(isp);
 		if (ret)
 			goto out;
+
+		/*
+		 * In case of the subdev is the last one before the csi bridge
+		 * the ent.bus.bus_type will be set to V4L2_MBUS_CSI2_DPHY,
+		 * in which case we need to enable the CSI input of the DCMIPP
+		 * TODO: to will have to reworked to avoid duplication between
+		 * subdeves
+		 */
+		if (isp->ved.bus_type == V4L2_MBUS_CSI2_DPHY)
+			reg_write(isp, DCMIPP_CMCR, DCMIPP_CMCR_INSEL);
 	}
 
 	isp->streaming = enable;
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-parallel.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-parallel.c
index e737a48cfd66..b4223fdfdc04 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-parallel.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-parallel.c
@@ -39,6 +39,8 @@
 #define DCMIPP_PRESCR (0x108)
 #define DCMIPP_PRESUR (0x10c)
 
+#define DCMIPP_CMCR (0x204)
+
 #define IS_SINK(pad) (!(pad))
 #define IS_SRC(pad)  ((pad))
 
@@ -368,6 +370,9 @@ static int dcmipp_par_s_stream(struct v4l2_subdev *sd, int enable)
 		if (ret)
 			return ret;
 
+		/* Select the DCMIPP parallel interface */
+		reg_write(par, DCMIPP_CMCR, 0);
+
 		/* Enable parallel interface */
 		reg_set(par, DCMIPP_PRCR, DCMIPP_PRCR_ENABLE);
 	} else {
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
index 3cbfd2f43932..97de33be3967 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
@@ -27,6 +27,9 @@
 #define DCMIPP_FMT_WIDTH_DEFAULT  640
 #define DCMIPP_FMT_HEIGHT_DEFAULT 480
 
+#define DCMIPP_CMCR (0x204)
+#define DCMIPP_CMCR_INSEL BIT(0)
+
 #define DCMIPP_P1FCTCR (0x900)
 #define DCMIPP_P2FCTCR (0xD00)
 #define DCMIPP_PxFCTCR(id) (((id) == 1) ? DCMIPP_P1FCTCR :\
@@ -728,6 +731,16 @@ static int dcmipp_pixelproc_s_stream(struct v4l2_subdev *sd, int enable)
 			val |= DCMIPP_PxPPCR_SWAPRB;
 
 		reg_write(pixelproc, DCMIPP_PxPPCR(pixelproc->pipe_id), val);
+
+		/*
+		 * In case of the subdev is the last one before the csi bridge
+		 * the ent.bus.bus_type will be set to V4L2_MBUS_CSI2_DPHY,
+		 * in which case we need to enable the CSI input of the DCMIPP
+		 * TODO: to will have to reworked to avoid duplication between
+		 * subdeves
+		 */
+		if (pixelproc->ved.bus_type == V4L2_MBUS_CSI2_DPHY)
+			reg_write(pixelproc, DCMIPP_CMCR, DCMIPP_CMCR_INSEL);
 	}
 
 out:
-- 
2.39.2

