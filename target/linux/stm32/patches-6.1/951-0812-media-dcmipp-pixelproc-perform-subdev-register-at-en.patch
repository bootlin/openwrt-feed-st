From e7a4208a838cf67ca58fb01c69abc172be042266 Mon Sep 17 00:00:00 2001
From: Alain Volmat <alain.volmat@foss.st.com>
Date: Mon, 4 Dec 2023 14:26:54 +0100
Subject: [PATCH 0812/1141] media: dcmipp: pixelproc: perform subdev register
 at end of init

Subdev registration should only be done at the very end of the
subdev initialization since upon that user-space could start accessing
to the subdev.

Change-Id: Id607152be780cc277743d2b7719040d38875f35b
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/344621
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
---
 .../st/stm32/stm32-dcmipp/dcmipp-pixelproc.c  | 52 ++++++++++---------
 1 file changed, 28 insertions(+), 24 deletions(-)

--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
@@ -823,35 +823,18 @@ dcmipp_pixelproc_comp_bind(struct device
 		return -ENOMEM;
 
 	pixelproc->regs = bind_data->regs;
+	pixelproc->dev = comp;
 
 	/* Initialize the lock */
 	mutex_init(&pixelproc->lock);
 
-	/* Initialize ved and sd */
-	ret = dcmipp_ent_sd_register(&pixelproc->ved, &pixelproc->sd,
-				     bind_data->v4l2_dev,
-				     pdata->entity_name,
-				     MEDIA_ENT_F_PROC_VIDEO_PIXEL_FORMATTER, 2,
-				     (const unsigned long[2]) {
-				     MEDIA_PAD_FL_SINK,
-				     MEDIA_PAD_FL_SOURCE,
-				     },
-				     &dcmipp_pixelproc_int_ops, &dcmipp_pixelproc_ops,
-				     NULL, NULL);
-	if (ret) {
-		kfree(pixelproc);
-		return ret;
-	}
-
-	dev_set_drvdata(comp, &pixelproc->ved);
-	pixelproc->dev = comp;
-
 	/* Pipe identifier */
 	pixelproc->pipe_id = dcmipp_name_to_pipe_id(pdata->entity_name);
 	if (pixelproc->pipe_id != 1 && pixelproc->pipe_id != 2) {
 		dev_err(comp, "failed to retrieve pipe_id\n");
-		/* TODO - fix error handling */
-		return -1;
+		mutex_destroy(&pixelproc->lock);
+		kfree(pixelproc);
+		return -EIO;
 	}
 
 	/* Initialize the frame format */
@@ -878,11 +861,32 @@ dcmipp_pixelproc_comp_bind(struct device
 
 	pixelproc->sd.ctrl_handler = &pixelproc->ctrls;
 	if (pixelproc->ctrls.error) {
-		dev_err(pixelproc->dev, "control initialization error %d\n",
-			pixelproc->ctrls.error);
-		/* TODO - error handling */
+		ret = pixelproc->ctrls.error;
+		dev_err(pixelproc->dev, "control initialization error %d\n", ret);
+		mutex_destroy(&pixelproc->lock);
+		kfree(pixelproc);
+		return ret;
+	}
+
+	/* Initialize ved and sd */
+	ret = dcmipp_ent_sd_register(&pixelproc->ved, &pixelproc->sd,
+				     bind_data->v4l2_dev,
+				     pdata->entity_name,
+				     MEDIA_ENT_F_PROC_VIDEO_PIXEL_FORMATTER, 2,
+				     (const unsigned long[2]) {
+				     MEDIA_PAD_FL_SINK,
+				     MEDIA_PAD_FL_SOURCE,
+				     },
+				     &dcmipp_pixelproc_int_ops, &dcmipp_pixelproc_ops,
+				     NULL, NULL);
+	if (ret) {
+		mutex_destroy(&pixelproc->lock);
+		kfree(pixelproc);
+		return ret;
 	}
 
+	dev_set_drvdata(comp, &pixelproc->ved);
+
 	return 0;
 }
 
