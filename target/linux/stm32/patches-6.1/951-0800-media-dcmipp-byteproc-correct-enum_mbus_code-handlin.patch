From e25454727b2fd8b3c3f590c4a590f97a67f1c9e1 Mon Sep 17 00:00:00 2001
From: Alain Volmat <alain.volmat@foss.st.com>
Date: Sat, 2 Dec 2023 15:35:58 +0100
Subject: [PATCH 0800/1141] media: dcmipp: byteproc: correct enum_mbus_code
 handling

Since the byteproc subdev does not perform format transformation
src pad enumeration should only report the currently set sink pad
format.

Change-Id: I1fa36a3870b4d9a5dcb2291edaa07e99dbb677eb
Signed-off-by: Alain Volmat <alain.volmat@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/344608
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
---
 .../st/stm32/stm32-dcmipp/dcmipp-byteproc.c   | 32 ++++++++++---------
 1 file changed, 17 insertions(+), 15 deletions(-)

diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
index 07173fbc5674..4db4b8934137 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-byteproc.c
@@ -98,17 +98,6 @@ static const struct dcmipp_byteproc_pix_map dcmipp_byteproc_pix_map_list[] = {
 	PIXMAP_MBUS_BPP(JPEG_1X8, 1, 0x00), /* TODO - DT value to be fixed */
 };
 
-static const struct dcmipp_byteproc_pix_map *dcmipp_byteproc_pix_map_by_index(unsigned int i)
-{
-	const struct dcmipp_byteproc_pix_map *l = dcmipp_byteproc_pix_map_list;
-	unsigned int size = ARRAY_SIZE(dcmipp_byteproc_pix_map_list);
-
-	if (i >= size)
-		return NULL;
-
-	return &l[i];
-}
-
 static const struct dcmipp_byteproc_pix_map *dcmipp_byteproc_pix_map_by_code(u32 code)
 {
 	const struct dcmipp_byteproc_pix_map *l = dcmipp_byteproc_pix_map_list;
@@ -275,13 +264,26 @@ static int dcmipp_byteproc_enum_mbus_code(struct v4l2_subdev *sd,
 					  struct v4l2_subdev_state *sd_state,
 					  struct v4l2_subdev_mbus_code_enum *code)
 {
+	struct dcmipp_byteproc_device *byteproc = v4l2_get_subdevdata(sd);
 	const struct dcmipp_byteproc_pix_map *vpix;
+	struct v4l2_mbus_framefmt *sink_fmt;
 
-	vpix = dcmipp_byteproc_pix_map_by_index(code->index);
-	if (!vpix)
-		return -EINVAL;
+	if (IS_SINK(code->pad)) {
+		if (code->index >= ARRAY_SIZE(dcmipp_byteproc_pix_map_list))
+			return -EINVAL;
+		vpix = &dcmipp_byteproc_pix_map_list[code->index];
+		code->code = vpix->code;
+	} else {
+		/* byteproc doesn't support transformation on format */
+		if (code->index > 0)
+			return -EINVAL;
 
-	code->code = vpix->code;
+		if (code->which == V4L2_SUBDEV_FORMAT_TRY)
+			sink_fmt = v4l2_subdev_get_try_format(sd, sd_state, 0);
+		else
+			sink_fmt = &byteproc->sink_fmt;
+		code->code = sink_fmt->code;
+	}
 
 	return 0;
 }
-- 
2.39.2

