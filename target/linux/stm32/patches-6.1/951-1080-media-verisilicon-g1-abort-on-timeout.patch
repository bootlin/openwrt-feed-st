From e8ebd4234c5782aa32c3cf1f11427c2366e338ca Mon Sep 17 00:00:00 2001
From: Hugues Fruchet <hugues.fruchet@foss.st.com>
Date: Wed, 3 Apr 2024 11:57:57 +0200
Subject: [PATCH 1080/1141] media: verisilicon: g1: abort on timeout

G1 hardware timeout feature (see G1_REG_CONFIG_DEC_TIMEOUT_E)
resets hardware without checking the presence of pending bus
transactions: this can hang the bus in an unrecoverable way.

As a workaround, disable hardware timeout feature and
replace it by a software timeout.
This is implemented by checking if G1 is idle before each
run, if it is not the case hardware is aborted: this will
clean all the bus left transactions.

Signed-off-by: Hugues Fruchet <hugues.fruchet@foss.st.com>
Change-Id: I50610c7b900593eb141eb3b7ba330e486d35ccd3
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/371363
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
Reviewed-by: Hugues FRUCHET <hugues.fruchet@st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Tested-by: Hugues FRUCHET <hugues.fruchet@st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 drivers/media/platform/verisilicon/hantro_g1.c  | 17 +++++++++++++++++
 .../platform/verisilicon/hantro_g1_h264_dec.c   |  3 ++-
 .../platform/verisilicon/hantro_g1_mpeg2_dec.c  |  3 ++-
 .../media/platform/verisilicon/hantro_g1_regs.h |  1 +
 .../platform/verisilicon/hantro_g1_vp8_dec.c    |  5 +++--
 drivers/media/platform/verisilicon/hantro_hw.h  |  1 +
 6 files changed, 26 insertions(+), 4 deletions(-)

diff --git a/drivers/media/platform/verisilicon/hantro_g1.c b/drivers/media/platform/verisilicon/hantro_g1.c
index 0ab1cee62218..50715f35357c 100644
--- a/drivers/media/platform/verisilicon/hantro_g1.c
+++ b/drivers/media/platform/verisilicon/hantro_g1.c
@@ -11,6 +11,23 @@
 #include "hantro.h"
 #include "hantro_g1_regs.h"
 
+void hantro_g1_check_idle(struct hantro_dev *vpu)
+{
+	int i;
+
+	for (i = 0; i < 3; i++) {
+		u32 status;
+
+		/* Make sure the VPU is idle */
+		status = vdpu_read(vpu, G1_REG_INTERRUPT);
+		if (status & G1_REG_INTERRUPT_DEC_E) {
+			dev_warn(vpu->dev, "device still running, aborting");
+			status |= G1_REG_INTERRUPT_DEC_ABORT_E | G1_REG_INTERRUPT_DEC_IRQ_DIS;
+			vdpu_write(vpu, status, G1_REG_INTERRUPT);
+		}
+	}
+}
+
 irqreturn_t hantro_g1_irq(int irq, void *dev_id)
 {
 	struct hantro_dev *vpu = dev_id;
diff --git a/drivers/media/platform/verisilicon/hantro_g1_h264_dec.c b/drivers/media/platform/verisilicon/hantro_g1_h264_dec.c
index 0ebb6f2df5c2..3e14525e887d 100644
--- a/drivers/media/platform/verisilicon/hantro_g1_h264_dec.c
+++ b/drivers/media/platform/verisilicon/hantro_g1_h264_dec.c
@@ -253,6 +253,8 @@ int hantro_g1_h264_dec_run(struct hantro_ctx *ctx)
 	struct vb2_v4l2_buffer *src_buf;
 	int ret;
 
+	hantro_g1_check_idle(vpu);
+
 	/* Prepare the H264 decoder context. */
 	ret = hantro_h264_dec_prepare_run(ctx);
 	if (ret)
@@ -269,7 +271,6 @@ int hantro_g1_h264_dec_run(struct hantro_ctx *ctx)
 	/* Start decoding! */
 	vdpu_write_relaxed(vpu,
 			   G1_REG_CONFIG_DEC_AXI_RD_ID(0xffu) |
-			   G1_REG_CONFIG_DEC_TIMEOUT_E |
 			   G1_REG_CONFIG_DEC_OUT_ENDIAN |
 			   G1_REG_CONFIG_DEC_STRENDIAN_E |
 			   G1_REG_CONFIG_DEC_2CHAN_DIS |
diff --git a/drivers/media/platform/verisilicon/hantro_g1_mpeg2_dec.c b/drivers/media/platform/verisilicon/hantro_g1_mpeg2_dec.c
index 5ab20327283c..bcaf350aa2a2 100644
--- a/drivers/media/platform/verisilicon/hantro_g1_mpeg2_dec.c
+++ b/drivers/media/platform/verisilicon/hantro_g1_mpeg2_dec.c
@@ -156,6 +156,8 @@ int hantro_g1_mpeg2_dec_run(struct hantro_ctx *ctx)
 	src_buf = hantro_get_src_buf(ctx);
 	dst_buf = hantro_get_dst_buf(ctx);
 
+	hantro_g1_check_idle(vpu);
+
 	/* Apply request controls if any */
 	hantro_start_prepare_run(ctx);
 
@@ -165,7 +167,6 @@ int hantro_g1_mpeg2_dec_run(struct hantro_ctx *ctx)
 			      V4L2_CID_STATELESS_MPEG2_PICTURE);
 
 	reg = G1_REG_DEC_AXI_RD_ID(0) |
-	      G1_REG_DEC_TIMEOUT_E(1) |
 	      G1_REG_DEC_STRSWAP32_E(1) |
 	      G1_REG_DEC_STRENDIAN_E(1) |
 	      G1_REG_DEC_INSWAP32_E(1) |
diff --git a/drivers/media/platform/verisilicon/hantro_g1_regs.h b/drivers/media/platform/verisilicon/hantro_g1_regs.h
index ce2b1b8a3a60..e322fe9320cc 100644
--- a/drivers/media/platform/verisilicon/hantro_g1_regs.h
+++ b/drivers/media/platform/verisilicon/hantro_g1_regs.h
@@ -22,6 +22,7 @@
 #define     G1_REG_INTERRUPT_DEC_BUS_INT		BIT(13)
 #define     G1_REG_INTERRUPT_DEC_RDY_INT		BIT(12)
 #define     G1_REG_INTERRUPT_DEC_IRQ			BIT(8)
+#define     G1_REG_INTERRUPT_DEC_ABORT_E		BIT(5)
 #define     G1_REG_INTERRUPT_DEC_IRQ_DIS		BIT(4)
 #define     G1_REG_INTERRUPT_DEC_E			BIT(0)
 #define G1_REG_CONFIG					0x008
diff --git a/drivers/media/platform/verisilicon/hantro_g1_vp8_dec.c b/drivers/media/platform/verisilicon/hantro_g1_vp8_dec.c
index b12f090a0b25..4bfae8696277 100644
--- a/drivers/media/platform/verisilicon/hantro_g1_vp8_dec.c
+++ b/drivers/media/platform/verisilicon/hantro_g1_vp8_dec.c
@@ -439,6 +439,8 @@ int hantro_g1_vp8_dec_run(struct hantro_ctx *ctx)
 	u32 mb_width, mb_height;
 	u32 reg;
 
+	hantro_g1_check_idle(vpu);
+
 	hantro_start_prepare_run(ctx);
 
 	hdr = hantro_get_ctrl(ctx, V4L2_CID_STATELESS_VP8_FRAME);
@@ -452,8 +454,7 @@ int hantro_g1_vp8_dec_run(struct hantro_ctx *ctx)
 
 	hantro_vp8_prob_update(ctx, hdr);
 
-	reg = G1_REG_CONFIG_DEC_TIMEOUT_E |
-	      G1_REG_CONFIG_DEC_STRENDIAN_E |
+	reg = G1_REG_CONFIG_DEC_STRENDIAN_E |
 	      G1_REG_CONFIG_DEC_INSWAP32_E |
 	      G1_REG_CONFIG_DEC_STRSWAP32_E |
 	      G1_REG_CONFIG_DEC_OUTSWAP32_E |
diff --git a/drivers/media/platform/verisilicon/hantro_hw.h b/drivers/media/platform/verisilicon/hantro_hw.h
index 1e38a45a6125..6aea756befe9 100644
--- a/drivers/media/platform/verisilicon/hantro_hw.h
+++ b/drivers/media/platform/verisilicon/hantro_hw.h
@@ -422,6 +422,7 @@ void hantro_irq_done(struct hantro_dev *vpu,
 void hantro_start_prepare_run(struct hantro_ctx *ctx);
 void hantro_end_prepare_run(struct hantro_ctx *ctx);
 
+void hantro_g1_check_idle(struct hantro_dev *vpu);
 irqreturn_t hantro_g1_irq(int irq, void *dev_id);
 void hantro_g1_reset(struct hantro_ctx *ctx);
 
-- 
2.39.2

