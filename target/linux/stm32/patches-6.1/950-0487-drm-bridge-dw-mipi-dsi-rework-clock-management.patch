From 01e3a062439d6f1c2c6726173b2daaa42144fe42 Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Thu, 16 Mar 2023 08:39:26 +0100
Subject: [PATCH 487/529] drm/bridge: dw-mipi-dsi: rework clock management

All clocks should be controlled thanks to the pm_runtime.
Remove call of clk_prepare_enable/clk_disable_unprepare & replace
them by call of pm_runtime functions.

Change-Id: I7b13fc305ef44f90651bdddd4e01d13eb2392ece
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/295848
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Philippe CORNU <philippe.cornu@foss.st.com>
Domain-Review: Philippe CORNU <philippe.cornu@foss.st.com>
---
 drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c | 12 ++++++++----
 1 file changed, 8 insertions(+), 4 deletions(-)

--- a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
@@ -851,6 +851,9 @@ static void dw_mipi_dsi_bridge_post_atom
 	struct dw_mipi_dsi *dsi = bridge_to_dsi(bridge);
 	const struct dw_mipi_dsi_phy_ops *phy_ops = dsi->plat_data->phy_ops;
 
+	if (!pm_runtime_active(dsi->dev))
+		return;
+
 	/*
 	 * Switch to command mode before panel-bridge post_disable &
 	 * panel unprepare.
@@ -878,7 +881,6 @@ static void dw_mipi_dsi_bridge_post_atom
 	}
 	dw_mipi_dsi_disable(dsi);
 
-	clk_disable_unprepare(dsi->pclk);
 	pm_runtime_put(dsi->dev);
 }
 
@@ -904,14 +906,11 @@ static void dw_mipi_dsi_mode_set(struct
 	int ret;
 	u32 lanes = dw_mipi_dsi_get_lanes(dsi);
 
-	clk_prepare_enable(dsi->pclk);
-
 	ret = phy_ops->get_lane_mbps(priv_data, adjusted_mode, dsi->mode_flags,
 				     lanes, dsi->format, &dsi->lane_mbps);
 	if (ret)
 		DRM_DEBUG_DRIVER("Phy get_lane_mbps() failed\n");
 
-	pm_runtime_get_sync(dsi->dev);
 	dw_mipi_dsi_init(dsi);
 	dw_mipi_dsi_dpi_config(dsi, adjusted_mode);
 	dw_mipi_dsi_packet_handler_config(dsi);
@@ -948,6 +947,8 @@ static void dw_mipi_dsi_bridge_mode_set(
 {
 	struct dw_mipi_dsi *dsi = bridge_to_dsi(bridge);
 
+	pm_runtime_get_sync(dsi->dev);
+
 	dw_mipi_dsi_mode_set(dsi, adjusted_mode);
 	if (dsi->slave)
 		dw_mipi_dsi_mode_set(dsi->slave, adjusted_mode);
@@ -958,6 +959,9 @@ static void dw_mipi_dsi_bridge_atomic_en
 {
 	struct dw_mipi_dsi *dsi = bridge_to_dsi(bridge);
 
+	if (!pm_runtime_active(dsi->dev))
+		return;
+
 	/* Switch to video mode for panel-bridge enable & panel enable */
 	dw_mipi_dsi_set_mode(dsi, MIPI_DSI_MODE_VIDEO);
 	if (dsi->slave)
