From 94f64c0ae09532c7bf1c174d7ca7db77a05e7a1f Mon Sep 17 00:00:00 2001
From: Yannick Fertre <yannick.fertre@foss.st.com>
Date: Wed, 3 Jan 2024 14:56:01 +0100
Subject: [PATCH 0857/1141] drm/bridge: synopsys: dw-mipi-dsi: add property
 default-on

Add support of a new property 'default-on' to avoid reset
of DSI at probe.

Change-Id: Id7867b3c83febd2550c5dfe6069db56b279b9153
Signed-off-by: Yannick Fertre <yannick.fertre@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/352877
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
---
 drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c | 34 ++++++++++---------
 1 file changed, 18 insertions(+), 16 deletions(-)

--- a/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
+++ b/drivers/gpu/drm/bridge/synopsys/dw-mipi-dsi.c
@@ -1230,28 +1230,30 @@ __dw_mipi_dsi_probe(struct platform_devi
 	 * Note that the reset was not defined in the initial device tree, so
 	 * we have to be prepared for it not being found.
 	 */
-	apb_rst = devm_reset_control_get_optional_exclusive(dev, "apb");
-	if (IS_ERR(apb_rst)) {
-		ret = PTR_ERR(apb_rst);
+	if (!device_property_read_bool(dev, "default-on")) {
+		apb_rst = devm_reset_control_get_optional_exclusive(dev, "apb");
+		if (IS_ERR(apb_rst)) {
+			ret = PTR_ERR(apb_rst);
 
-		if (ret != -EPROBE_DEFER)
-			dev_err(dev, "Unable to get reset control: %d\n", ret);
+			if (ret != -EPROBE_DEFER)
+				dev_err(dev, "Unable to get reset control: %d\n", ret);
 
-		return ERR_PTR(ret);
-	}
-
-	if (apb_rst) {
-		ret = clk_prepare_enable(dsi->pclk);
-		if (ret) {
-			dev_err(dev, "%s: Failed to enable pclk\n", __func__);
 			return ERR_PTR(ret);
 		}
 
-		reset_control_assert(apb_rst);
-		usleep_range(10, 20);
-		reset_control_deassert(apb_rst);
+		if (apb_rst) {
+			ret = clk_prepare_enable(dsi->pclk);
+			if (ret) {
+				dev_err(dev, "%s: Failed to enable pclk\n", __func__);
+				return ERR_PTR(ret);
+			}
+
+			reset_control_assert(apb_rst);
+			usleep_range(10, 20);
+			reset_control_deassert(apb_rst);
 
-		clk_disable_unprepare(dsi->pclk);
+			clk_disable_unprepare(dsi->pclk);
+		}
 	}
 
 	dw_mipi_dsi_debugfs_init(dsi);
