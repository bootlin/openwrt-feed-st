From 1c70d0ec15b011b85a359ce0b32863fd686a40ab Mon Sep 17 00:00:00 2001
From: Raphael Gallais-Pou <raphael.gallais-pou@foss.st.com>
Date: Wed, 2 Aug 2023 17:00:10 +0200
Subject: [PATCH 0516/1141] drm/stm: lvds: handle CRTC parent clock

When LVDS is plugged, it takes control of the display mux clk by setting
itself as parent clock for the CRTC.

Signed-off-by: Raphael Gallais-Pou <raphael.gallais-pou@foss.st.com>
Change-Id: I17d3416362af1d1a0b36f2337325b3fe6c70399e
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/322047
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Domain-Review: Yannick FERTRE <yannick.fertre@foss.st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: Yannick FERTRE <yannick.fertre@foss.st.com>
---
 drivers/gpu/drm/stm/lvds.c | 19 ++++++++++++++++++-
 1 file changed, 18 insertions(+), 1 deletion(-)

diff --git a/drivers/gpu/drm/stm/lvds.c b/drivers/gpu/drm/stm/lvds.c
index fd62d895288e..da68234d6caa 100644
--- a/drivers/gpu/drm/stm/lvds.c
+++ b/drivers/gpu/drm/stm/lvds.c
@@ -1073,8 +1073,9 @@ static int lvds_probe(struct platform_device *pdev)
 	struct device *dev = &pdev->dev;
 	struct device_node *port1, *port2, *remote;
 	struct stm_lvds *lvds;
-	int ret, dual_link;
 	struct reset_control *rstc;
+	struct clk *pixel_clk;
+	int ret, dual_link;
 
 	DRM_DEBUG_DRIVER("Probing LVDS driver...\n");
 
@@ -1192,6 +1193,19 @@ static int lvds_probe(struct platform_device *pdev)
 		goto err_lvds_probe;
 	}
 
+	pixel_clk = devm_clk_get(lvds->dev, "pixclk");
+	if (IS_ERR(pixel_clk)) {
+		ret = PTR_ERR(pixel_clk);
+		DRM_ERROR("Unable to get pix clock: %d\n", ret);
+		goto err_lvds_probe;
+	}
+
+	ret = clk_set_parent(pixel_clk, lvds->lvds_ck_px.clk);
+	if (ret) {
+		DRM_ERROR("Could not set parent clock: %d\n", ret);
+		goto err_lvds_clk_parent;
+	}
+
 	lvds->lvds_bridge.funcs = &lvds_bridge_funcs;
 	lvds->lvds_bridge.of_node = dev->of_node;
 
@@ -1199,7 +1213,10 @@ static int lvds_probe(struct platform_device *pdev)
 
 	platform_set_drvdata(pdev, lvds);
 
+	return 0;
 
+err_lvds_clk_parent:
+	lvds_pixel_clk_unregister(lvds);
 err_lvds_probe:
 	clk_disable_unprepare(lvds->pclk);
 
-- 
2.39.2

