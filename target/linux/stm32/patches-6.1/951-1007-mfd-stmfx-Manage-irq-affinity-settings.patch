From e51a5012705e4f9e11ab69b50eeed74ffd2596a4 Mon Sep 17 00:00:00 2001
From: Cheick TRAORE <cheick.traore-ext@st.com>
Date: Thu, 28 Mar 2024 12:36:49 +0100
Subject: [PATCH 1007/1141] mfd: stmfx: Manage irq affinity settings

Trying to set the affinity of the interrupt associated to STMFx
results in a write error cause the STMFx was not managing the set
of the irq smp_affinity. It is resolved by adding the
.irq_set_affinity to the stmfx_irq_chip struct and fill it
with a function to manage affinity. The function return an
error explaining to set the affinity of the gpio interrupt
provider to change stmfx smp_affinity.

Change-Id: I56764ae5de695522670e6aa2e81ea53e54be5990
Signed-off-by: Cheick TRAORE <cheick.traore-ext@st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/360860
Reviewed-by: Antonio Maria BORNEO <antonio.borneo@foss.st.com>
ACI: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
Domain-Review: Amelie DELAUNAY <amelie.delaunay@foss.st.com>
---
 drivers/mfd/stmfx.c | 16 ++++++++++++++++
 1 file changed, 16 insertions(+)

diff --git a/drivers/mfd/stmfx.c b/drivers/mfd/stmfx.c
index eaf0d29e0258..405b58646ee2 100644
--- a/drivers/mfd/stmfx.c
+++ b/drivers/mfd/stmfx.c
@@ -191,12 +191,28 @@ static void stmfx_irq_unmask(struct irq_data *data)
 	stmfx->irq_src |= BIT(data->hwirq % 8);
 }
 
+static int stmfx_irq_set_affinity(struct irq_data *d, const struct cpumask *dest, bool force)
+{
+	struct stmfx *stmfx = irq_data_get_irq_chip_data(d);
+	struct i2c_client *client = to_i2c_client(stmfx->dev);
+	static DEFINE_RATELIMIT_STATE(rs, DEFAULT_RATELIMIT_INTERVAL * 10, 1);
+
+	if (__ratelimit(&rs))
+		dev_notice(stmfx->dev,
+			   "Can't set the affinity, set it for irq %d instead\n", client->irq);
+	if (force)
+		return -EINVAL;
+
+	return 0;
+}
+
 static struct irq_chip stmfx_irq_chip = {
 	.name			= "stmfx-core",
 	.irq_bus_lock		= stmfx_irq_bus_lock,
 	.irq_bus_sync_unlock	= stmfx_irq_bus_sync_unlock,
 	.irq_mask		= stmfx_irq_mask,
 	.irq_unmask		= stmfx_irq_unmask,
+	.irq_set_affinity	= IS_ENABLED(CONFIG_SMP) ? stmfx_irq_set_affinity : NULL,
 };
 
 static irqreturn_t stmfx_irq_handler(int irq, void *data)
-- 
2.39.2

