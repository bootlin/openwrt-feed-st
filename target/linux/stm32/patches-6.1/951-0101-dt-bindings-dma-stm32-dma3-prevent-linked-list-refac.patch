From 6ca71465804790aec15bfe86ad43657b0e50e508 Mon Sep 17 00:00:00 2001
From: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date: Thu, 23 Mar 2023 15:48:09 +0100
Subject: [PATCH 0101/1141] dt-bindings: dma: stm32-dma3: prevent linked-list
 refactoring

stm32-dma3 driver refactors the linked-list in order to address the memory
with the highest possible data width.
It means that it can introduce up to 2 linked-list items. One with a
transfer length multiple of channel maximum burst length and so with the
highest possible data width. And an extra one with the latest bytes, with
lower data width.
Some devices (e.g. FMC ECC) don't support having several transfers instead
of only one.
So add the possibility to prevent linked-list refactoring, by setting bit
17 of the 'DMA transfer requirements' bit mask.

Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
Change-Id: I3984ad1eeee414e48868bbd7ebe007149eaecf9f
---
 Documentation/devicetree/bindings/dma/st,stm32-dma3.yaml | 3 +++
 1 file changed, 3 insertions(+)

--- a/Documentation/devicetree/bindings/dma/st,stm32-dma3.yaml
+++ b/Documentation/devicetree/bindings/dma/st,stm32-dma3.yaml
@@ -60,6 +60,9 @@ description: |
       -bit 16: Prevent packing/unpacking mode
         0x0: pack/unpack enabled when source data width/burst != destination data width/burst
         0x1: memory data width/burst forced to peripheral data width/burst to prevent pack/unpack
+      -bit 17: Prevent linked-list refactoring
+        0x0: don't prevent driver to refactor the linked-list for optimal performance
+        0x1: prevent driver to refactor the linked-list, despite not optimal performance
     4. A 32-bit mask specifying the DMA transfer extended requirements
       -bit 0-12: The source address offset increment
       -bit 13: The source address increment type
