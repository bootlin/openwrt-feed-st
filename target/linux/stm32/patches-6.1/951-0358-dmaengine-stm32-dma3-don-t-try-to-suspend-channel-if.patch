From 9bb102185598b78b13b0b0c022c4ffb4e2a53f1a Mon Sep 17 00:00:00 2001
From: Amelie Delaunay <amelie.delaunay@foss.st.com>
Date: Thu, 20 Apr 2023 15:07:48 +0200
Subject: [PATCH 0358/1141] dmaengine: stm32-dma3: don't try to suspend channel
 if not running

To get accurate residue, channel is suspended to read registers, then it is
resumed.
Transfer completion can occur on HW side while entering
stm32_dma3_chan_set_residue(), and while going to suspend the channel.
CxSR.SUSPF flag will then never be set, as CxCR.SUSP request is silently
ignored by HW. So don't try to suspend channel if it is idle, and don't log
an error message if channel becomes idle just after entering the condition.

Also return with chan->dma_status = DMA_COMPLETE if channel is idle and
transfer is completed.

Change-Id: Ib808a43c947da59766cb6012347b556cdf3c0619
Signed-off-by: Amelie Delaunay <amelie.delaunay@foss.st.com>
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/314448
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 drivers/dma/stm32-dma3.c | 20 ++++++++++++++------
 1 file changed, 14 insertions(+), 6 deletions(-)

--- a/drivers/dma/stm32-dma3.c
+++ b/drivers/dma/stm32-dma3.c
@@ -1185,19 +1185,27 @@ static void stm32_dma3_chan_set_residue(
 
 	residue = 0;
 
-	if (chan->dma_status != DMA_PAUSED) {
+	csr = readl_relaxed(ddata->base + STM32_DMA3_CSR(chan->id));
+	if (!(csr & CSR_IDLEF) && chan->dma_status != DMA_PAUSED) {
 		/* Suspend current transfer to read registers for a snapshot */
 		ccr = readl_relaxed(ddata->base + STM32_DMA3_CCR(chan->id));
 		writel_relaxed(ccr | CCR_SUSP, ddata->base + STM32_DMA3_CCR(chan->id));
 		ret = readl_relaxed_poll_timeout_atomic(ddata->base + STM32_DMA3_CSR(chan->id), csr,
 							csr & CSR_SUSPF, 10, USEC_PER_SEC);
 		if (ret < 0) {
+			writel_relaxed(CFCR_SUSPF, ddata->base + STM32_DMA3_CFCR(chan->id));
 			writel_relaxed(ccr & ~CCR_SUSP, ddata->base + STM32_DMA3_CCR(chan->id));
-			dev_err(dev, "can't get residue: transfer not suspended (%d)\n", ret);
-			return;
+			if (!(csr & CSR_IDLEF)) {
+				dev_err(dev,
+					"can't get residue: transfer not suspended (%d)\n", ret);
+				return;
+			}
 		}
-	} else {
-		csr = readl_relaxed(ddata->base + STM32_DMA3_CSR(chan->id));
+	}
+
+	if ((csr & CSR_IDLEF) && (csr & CSR_TCF) && !(csr & CSR_SUSPF)) {
+		chan->dma_status = DMA_COMPLETE;
+		return;
 	}
 
 	/* Read registers to have a snapshot */
@@ -1205,7 +1213,7 @@ static void stm32_dma3_chan_set_residue(
 	cbr1 = readl_relaxed(ddata->base + STM32_DMA3_CBR1(chan->id));
 	cllr = readl_relaxed(ddata->base + STM32_DMA3_CLLR(chan->id));
 
-	if (chan->dma_status != DMA_PAUSED) {
+	if ((csr & CSR_SUSPF) && chan->dma_status != DMA_PAUSED) {
 		/* Resume current transfer */
 		writel_relaxed(CFCR_SUSPF, ddata->base + STM32_DMA3_CFCR(chan->id));
 		writel_relaxed(ccr & ~CCR_SUSP, ddata->base + STM32_DMA3_CCR(chan->id));
