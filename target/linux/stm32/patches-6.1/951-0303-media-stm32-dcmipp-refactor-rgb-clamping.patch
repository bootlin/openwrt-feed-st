From bba05ebb8412891207afbf79d2b28c1d9f585322 Mon Sep 17 00:00:00 2001
From: Fabien Dessenne <fabien.dessenne@foss.st.com>
Date: Tue, 7 Feb 2023 17:52:54 +0100
Subject: [PATCH 0303/1141] media: stm32: dcmipp: refactor rgb clamping

Refactor RGB clamping.

Signed-off-by: Fabien Dessenne <fabien.dessenne@foss.st.com>
Change-Id: I45be2e997a710fe07e12128e7bf322c8d1587b98
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/292773
Tested-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Domain-Review: Eric FOURMONT <eric.fourmont-ext@st.com>
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
---
 .../st/stm32/stm32-dcmipp/dcmipp-colorconv.c      |  7 ++++++-
 .../st/stm32/stm32-dcmipp/dcmipp-colorconv.h      |  1 +
 .../platform/st/stm32/stm32-dcmipp/dcmipp-isp.c   |  9 +++------
 .../st/stm32/stm32-dcmipp/dcmipp-pixelproc.c      | 15 ++++++---------
 4 files changed, 16 insertions(+), 16 deletions(-)

diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.c
index 9d2710c1f515..3b72b4118994 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.c
@@ -344,8 +344,13 @@ int dcmipp_colorconv_configure(struct device *dev,
 		FMT_STR(sink_fmt), RANGE_STR(sink_range),
 		FMT_STR(src_fmt), RANGE_STR(src_range));
 
-	if (src_range == RANGE_LIMITED)
+	if (src_range == RANGE_LIMITED) {
 		cfg->clamping = true;
+		if (src->code >= MEDIA_BUS_FMT_Y8_1X8 && src->code < MEDIA_BUS_FMT_SBGGR8_1X8)
+			cfg->clamping_as_rgb = false;
+		else
+			cfg->clamping_as_rgb = true;
+	}
 
 	cfg->enable = true;
 
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.h b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.h
index 870e55e1f0dc..a7205733b08e 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.h
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-colorconv.h
@@ -14,6 +14,7 @@
 struct dcmipp_colorconv_config {
 	unsigned int conv_matrix[6];
 	bool clamping;
+	bool clamping_as_rgb;
 	bool enable;
 };
 
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
index 5e5aa0242f91..82e65d5ae3e8 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-isp.c
@@ -562,10 +562,6 @@ static int dcmipp_isp_get_fmt(struct v4l2_subdev *sd,
 	return 0;
 }
 
-#define dcmipp_isp_is_yuv_fmt(a) ({					      \
-	typeof(a) __a = (a);						      \
-	((__a) >= MEDIA_BUS_FMT_Y8_1X8 && (__a) < MEDIA_BUS_FMT_SBGGR8_1X8) ? \
-	 true : false; })
 static int dcmipp_isp_set_fmt(struct v4l2_subdev *sd,
 			      struct v4l2_subdev_state *state,
 			      struct v4l2_subdev_format *fmt)
@@ -596,7 +592,8 @@ static int dcmipp_isp_set_fmt(struct v4l2_subdev *sd,
 	if (IS_SINK(fmt->pad) && fmt->which == V4L2_SUBDEV_FORMAT_ACTIVE) {
 		/* When setting sink format, we have to update the src format */
 		isp->src_fmt = fmt->format;
-		if (dcmipp_isp_is_yuv_fmt(fmt->format.code))
+		if (fmt->format.code >= MEDIA_BUS_FMT_Y8_1X8 &&
+		    fmt->format.code < MEDIA_BUS_FMT_SBGGR8_1X8)
 			isp->src_fmt.code = MEDIA_BUS_FMT_YUV8_1X24;
 		else
 			isp->src_fmt.code = MEDIA_BUS_FMT_RGB888_1X24;
@@ -870,7 +867,7 @@ static int dcmipp_isp_colorconv_config(struct dcmipp_isp_device *isp)
 
 	if (ccconf.clamping)
 		val |= DCMIPP_P1CCCR_CLAMP;
-	if (!dcmipp_isp_is_yuv_fmt(isp->src_fmt.code))
+	if (ccconf.clamping_as_rgb)
 		val |= DCMIPP_P1CCCR_TYPE_RGB;
 	if (ccconf.enable)
 		val |= DCMIPP_P1CCCR_ENABLE;
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
index 6134ed516e36..3cbfd2f43932 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelproc.c
@@ -410,10 +410,6 @@ static int dcmipp_pixelproc_get_fmt(struct v4l2_subdev *sd,
 	return 0;
 }
 
-#define dcmipp_pixelproc_is_yuv_fmt(a) ({				      \
-	typeof(a) __a = (a);						      \
-	((__a) >= MEDIA_BUS_FMT_Y8_1X8 && (__a) < MEDIA_BUS_FMT_SBGGR8_1X8) ? \
-	 true : false; })
 static int dcmipp_pixelproc_set_fmt(struct v4l2_subdev *sd,
 				    struct v4l2_subdev_state *state,
 				    struct v4l2_subdev_format *fmt)
@@ -470,10 +466,11 @@ static int dcmipp_pixelproc_set_fmt(struct v4l2_subdev *sd,
 
 		/* Update src pad format & size */
 		pixelproc->src_fmt = fmt_src_default;
-		pixelproc->src_fmt.code =
-			dcmipp_pixelproc_is_yuv_fmt(fmt->format.code) ?
-				MEDIA_BUS_FMT_YUYV8_2X8 :
-				MEDIA_BUS_FMT_RGB565_2X8_LE;
+		if (fmt->format.code >= MEDIA_BUS_FMT_Y8_1X8 &&
+		    fmt->format.code < MEDIA_BUS_FMT_SBGGR8_1X8)
+			pixelproc->src_fmt.code = MEDIA_BUS_FMT_YUYV8_2X8;
+		else
+			pixelproc->src_fmt.code = MEDIA_BUS_FMT_RGB565_2X8_LE;
 		pixelproc->src_fmt.width = fmt->format.width;
 		pixelproc->src_fmt.height = fmt->format.height;
 	}
@@ -634,7 +631,7 @@ dcmipp_pixelproc_colorconv_config(struct dcmipp_pixelproc_device *pixelproc)
 
 	if (ccconf.clamping)
 		val |= DCMIPP_P1YUVCR_CLAMP;
-	if (!dcmipp_pixelproc_is_yuv_fmt(pixelproc->src_fmt.code))
+	if (ccconf.clamping_as_rgb)
 		val |= DCMIPP_P1YUVCR_TYPE_RGB;
 	if (ccconf.enable)
 		val |= DCMIPP_P1YUVCR_ENABLE;
-- 
2.39.2

