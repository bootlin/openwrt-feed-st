From cf783d5a67589794ff6b08b127cb5746c784fe12 Mon Sep 17 00:00:00 2001
From: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Date: Tue, 6 Apr 2021 17:36:29 +0200
Subject: [PATCH 0239/1141] remoteproc: stm32: Add support of platform without
 memory translation

Manage platforms that not need memory translation between the
main and the secondary processors.

Defining dma-ranges without any items is interpreted as a configuration
without memory translations.

Signed-off-by: Arnaud Pouliquen <arnaud.pouliquen@foss.st.com>
Change-Id: I9d88265d05f274fc303860a07b523530b7d91680
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/244375
Reviewed-by: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: Fabien DESSENNE <fabien.dessenne@foss.st.com>
Reviewed-by: Arnaud POULIQUEN <arnaud.pouliquen@st.com>
Tested-by: Arnaud POULIQUEN <arnaud.pouliquen@st.com>
---
 drivers/remoteproc/stm32_rproc.c | 21 ++++++++++++++++++++-
 1 file changed, 20 insertions(+), 1 deletion(-)

diff --git a/drivers/remoteproc/stm32_rproc.c b/drivers/remoteproc/stm32_rproc.c
index 0ea7b832438f..2eb6068e099b 100644
--- a/drivers/remoteproc/stm32_rproc.c
+++ b/drivers/remoteproc/stm32_rproc.c
@@ -107,6 +107,11 @@ static int stm32_rproc_pa_to_da(struct rproc *rproc, phys_addr_t pa, u64 *da)
 	struct stm32_rproc *ddata = rproc->priv;
 	struct stm32_rproc_mem *p_mem;
 
+	if (!ddata->rmems) {
+		*da = pa;
+		return 0;
+	}
+
 	for (i = 0; i < ddata->nb_rmems; i++) {
 		p_mem = &ddata->rmems[i];
 
@@ -164,11 +169,19 @@ static int stm32_rproc_of_memory_translations(struct platform_device *pdev,
 
 	cnt = of_property_count_elems_of_size(np, "dma-ranges",
 					      sizeof(*mem_range));
-	if (cnt <= 0) {
+	if (cnt < 0) {
 		dev_err(dev, "%s: dma-ranges property not defined\n", __func__);
 		return -EINVAL;
 	}
 
+	if (!cnt) {
+		/*  If dma-ranges is empty no memory translation requested. */
+		dev_dbg(dev, "no memory translation\n");
+		ddata->rmems = NULL;
+		ddata->nb_rmems = 0;
+		return 0;
+	}
+
 	p_mems = devm_kcalloc(dev, cnt, sizeof(*p_mems), GFP_KERNEL);
 	if (!p_mems)
 		return -ENOMEM;
@@ -700,6 +713,12 @@ static int stm32_rproc_da_to_pa(struct rproc *rproc,
 	struct stm32_rproc_mem *p_mem;
 	unsigned int i;
 
+
+	if (!ddata->rmems) {
+		*pa = da;
+		return 0;
+	}
+
 	for (i = 0; i < ddata->nb_rmems; i++) {
 		p_mem = &ddata->rmems[i];
 
-- 
2.39.2

