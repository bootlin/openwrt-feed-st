From 1e730f732c02a04c6e7c49376aa520454ad97538 Mon Sep 17 00:00:00 2001
From: Hugues Fruchet <hugues.fruchet@foss.st.com>
Date: Thu, 9 Mar 2023 16:20:30 +0100
Subject: [PATCH 0305/1141] media: stm32: dcmipp: disable reset on timeout

Disable reset on timeout.

Signed-off-by: Hugues Fruchet <hugues.fruchet@foss.st.com>
Change-Id: Iee4bc13f4e48d90fb06d63a3c2358a83d980e6cc
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/294708
ACI: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Tested-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Domain-Review: Eric FOURMONT <eric.fourmont-ext@st.com>
---
 .../platform/st/stm32/stm32-dcmipp/dcmipp-bytecap.c | 13 -------------
 .../platform/st/stm32/stm32-dcmipp/dcmipp-common.h  |  1 -
 .../platform/st/stm32/stm32-dcmipp/dcmipp-core.c    |  1 -
 .../st/stm32/stm32-dcmipp/dcmipp-pixelcap.c         | 13 -------------
 4 files changed, 28 deletions(-)

diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-bytecap.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-bytecap.c
index 22ccd81efd60..62fbadb189c6 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-bytecap.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-bytecap.c
@@ -142,7 +142,6 @@ struct dcmipp_bytecap_device {
 	struct dcmipp_buf *active, *next;
 
 	void __iomem *regs;
-	struct reset_control *rstc;
 
 	u32 cmier;
 	u32 cmsr2;
@@ -693,17 +692,6 @@ static void dcmipp_bytecap_stop_streaming(struct vb2_queue *vq)
 
 	pm_runtime_put(vcap->cdev);
 
-	if (ret) {
-		/* Reset IP on timeout */
-		if (reset_control_assert(vcap->rstc))
-			dev_warn(vcap->dev, "Failed to assert the reset line\n");
-
-		usleep_range(3000, 5000);
-
-		if (reset_control_deassert(vcap->rstc))
-			dev_warn(vcap->dev, "Failed to deassert the reset line\n");
-	}
-
 	if (vcap->errors_count)
 		dev_warn(vcap->dev, "Some errors found while streaming: errors=%d (overrun=%d, limit=%d, nactive=%d), underrun=%d, buffers=%d\n",
 			 vcap->errors_count, vcap->overrun_count, vcap->limit_count,
@@ -1073,7 +1061,6 @@ static int dcmipp_bytecap_comp_bind(struct device *comp, struct device *master,
 	dev_set_drvdata(comp, &vcap->ved);
 	vcap->dev = comp;
 	vcap->regs = bind_data->regs;
-	vcap->rstc = bind_data->rstc;
 	vcap->cdev = master;
 
 	/* Initialize the video_device struct */
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-common.h b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-common.h
index 4b4c2d1e26f7..d7294f7daa25 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-common.h
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-common.h
@@ -86,7 +86,6 @@ struct dcmipp_bind_data {
 	struct v4l2_device		*v4l2_dev;
 
 	/* Hardware resources */
-	struct reset_control		*rstc;
 	void __iomem			*regs;
 };
 
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
index 4082d3a549dc..7150c7533646 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-core.c
@@ -263,7 +263,6 @@ static int dcmipp_comp_bind(struct device *master)
 
 	/* Bind subdevices */
 	bind_data.v4l2_dev = &dcmipp->v4l2_dev;
-	bind_data.rstc = dcmipp->rstc;
 	bind_data.regs = dcmipp->regs;
 	ret = component_bind_all(master, &bind_data);
 	if (ret)
diff --git a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
index dadffb20c105..a7537aa6712d 100644
--- a/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
+++ b/drivers/media/platform/st/stm32/stm32-dcmipp/dcmipp-pixelcap.c
@@ -183,7 +183,6 @@ struct dcmipp_pixelcap_device {
 	struct dcmipp_buf *active;
 
 	void __iomem *regs;
-	struct reset_control *rstc;
 
 	u32 pipe_id;
 
@@ -839,17 +838,6 @@ static void dcmipp_pixelcap_stop_streaming(struct vb2_queue *vq)
 
 	pm_runtime_put(vcap->cdev);
 
-	if (ret) {
-		/* Reset IP on timeout */
-		if (reset_control_assert(vcap->rstc))
-			dev_warn(vcap->dev, "Failed to assert the reset line\n");
-
-		usleep_range(3000, 5000);
-
-		if (reset_control_deassert(vcap->rstc))
-			dev_warn(vcap->dev, "Failed to deassert the reset line\n");
-	}
-
 	if (vcap->errors_count)
 		dev_warn(vcap->dev, "Some errors found while streaming: errors=%d (overrun=%d), buffers=%d\n",
 			 vcap->errors_count, vcap->overrun_count,
@@ -1240,7 +1228,6 @@ static int dcmipp_pixelcap_comp_bind(struct device *comp, struct device *master,
 	dev_set_drvdata(comp, &vcap->ved);
 	vcap->dev = comp;
 	vcap->regs = bind_data->regs;
-	vcap->rstc = bind_data->rstc;
 	vcap->cdev = master;
 
 	/* Initialize the video_device struct */
-- 
2.39.2

