From 9815a490fd04d3340e47dee7ccd1d03be66fb007 Mon Sep 17 00:00:00 2001
From: Philippe Cornu <philippe.cornu@foss.st.com>
Date: Tue, 18 Oct 2022 11:50:03 +0200
Subject: [PATCH 0275/1141] drm/stm: ltdc: configure length according to DT
 configuration

Provide capability to configure LTDC burst length according
to bus and DDR configuration.
Configuration is provided through DT node.

Signed-off-by: Philippe Cornu <philippe.cornu@foss.st.com>
Signed-off-by: Loic Pallardy <loic.pallardy@foss.st.com>
Change-Id: Ic2560acf34d1eb01910dc3afd9e7111366a92d88
Reviewed-on: https://gerrit.st.com/c/mpu/oe/st/linux-stm32/+/275271
Reviewed-by: CITOOLS <MDG-smet-aci-reviews@list.st.com>
Reviewed-by: CIBUILD <MDG-smet-aci-builds@list.st.com>
Reviewed-by: Yannick FERTRE <yannick.fertre@foss.st.com>
Reviewed-by: Eric FOURMONT <eric.fourmont-ext@st.com>
Tested-by: Yannick FERTRE <yannick.fertre@foss.st.com>
---
 drivers/gpu/drm/stm/ltdc.c | 12 ++++++++++++
 drivers/gpu/drm/stm/ltdc.h |  1 +
 2 files changed, 13 insertions(+)

diff --git a/drivers/gpu/drm/stm/ltdc.c b/drivers/gpu/drm/stm/ltdc.c
index a7d2df05eac1..61857292e19f 100644
--- a/drivers/gpu/drm/stm/ltdc.c
+++ b/drivers/gpu/drm/stm/ltdc.c
@@ -1496,6 +1496,9 @@ static void ltdc_plane_atomic_update(struct drm_plane *plane,
 		}
 	}
 
+	/* Configure burst length */
+	regmap_write(ldev->regmap, LTDC_L1BLCR + lofs, ldev->max_burst_length);
+
 	/* Enable layer and CLUT if needed */
 	val = fb->format->format == DRM_FORMAT_C8 ? LXCR_CLUTEN : 0;
 	val |= LXCR_LEN;
@@ -1982,6 +1985,7 @@ int ltdc_load(struct drm_device *ddev)
 	struct reset_control *rstc;
 	int irq, i, nb_endpoints;
 	int ret = -ENODEV;
+	u32 mbl;
 
 	DRM_DEBUG_DRIVER("\n");
 
@@ -1990,6 +1994,14 @@ int ltdc_load(struct drm_device *ddev)
 	if (!nb_endpoints)
 		return -ENODEV;
 
+	/* Get LTDC max burst length */
+	ret = of_property_read_u32(np, "st,burstlen", &mbl);
+	if (ret)
+		/* set to max burst length value */
+		ldev->max_burst_length = 0;
+	else
+		ldev->max_burst_length = mbl / 8;
+
 	ldev->pixel_clk = devm_clk_get(dev, "lcd");
 	if (IS_ERR(ldev->pixel_clk)) {
 		if (PTR_ERR(ldev->pixel_clk) != -EPROBE_DEFER)
diff --git a/drivers/gpu/drm/stm/ltdc.h b/drivers/gpu/drm/stm/ltdc.h
index 155d8e4a7c6b..a9246bd81bbb 100644
--- a/drivers/gpu/drm/stm/ltdc.h
+++ b/drivers/gpu/drm/stm/ltdc.h
@@ -56,6 +56,7 @@ struct ltdc_device {
 	struct drm_atomic_state *suspend_state;
 	int crc_skip_count;
 	bool crc_active;
+	u32 max_burst_length;
 };
 
 int ltdc_load(struct drm_device *ddev);
-- 
2.39.2

